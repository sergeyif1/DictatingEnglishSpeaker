const seleDictionary = document.getElementById("select2");
const checkboxes = document.querySelectorAll(".form-language .checkboxL");

// –†–∞–∑–¥–µ–ª—å–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã
let selectedFromSelect = null;
let selectedFromCheckboxes = [];

// –°–ª–æ–≤–∞—Ä—å —Å–ª–æ–≤–∞—Ä–µ–π
const dictMap = {
  "English dictionary": {
    code: "En",
    url: "/dbEn.json",
  },
  "Deutsch W√∂rterbuch": {
    code: "De",
    url: "/dbDeu.json",
  },
  "GriechŒπŒ∫œå ŒªŒµŒæŒπŒ∫œå": {
    code: "Gr",
    url: "/dbGr.json",
  },
  "Plskie s≈Çownictwo": {
    code: "Pl",
    url: "/dbPl.json",
  },
  "Italiano dizionario": {
    code: "It",
    url: "/dbIt.json",
  },
};

// –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ value —á–µ–∫–±–æ–∫—Å–æ–≤ –∏ –∫–æ–¥–æ–≤ —è–∑—ã–∫–æ–≤
const checkboxValueToCode = { 1: "En", 2: "Pl", 3: "Gr", 4: "De", 5: "It" };

// --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–æ–≤ ---
function updateLangs() {
  selectedFromCheckboxes = Array.from(checkboxes)
    .filter((cb) => cb.checked)
    .map((cb) =>
      Object.values(dictMap).find(
        (d) => d.code === checkboxValueToCode[cb.value]
      )
    )
    .filter(Boolean);

  logRequestAdd();
}

// --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ select ---
function handleSelectChange(event) {
  const selectedValue = event.target.value;
  selectedFromSelect = dictMap[selectedValue] || null;
  logRequestAdd();
}

// --- –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å—ë –ø—Ä—è–º–æ –≤ return ---
function getRequestAdd() {
  const result = [
    ...(selectedFromSelect ? [selectedFromSelect] : []),
    ...selectedFromCheckboxes,
  ]
    .map((item) => item.url)
    .filter(Boolean);

  return result.length > 0 ? result : undefined;
}

// --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∂–∏–≤—ã–º —Å—Ç–∞—Ç—É—Å–æ–º ---
function logRequestAdd() {
  const combined = getRequestAdd();
  if (!combined) {
    console.log("‚ö†Ô∏è –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤–∞—Ä–µ–π –∏ —è–∑—ã–∫–æ–≤");
    return;
  }

  console.log("üìò –¢–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–º–∞—Å—Å–∏–≤ URL‚Äô–æ–≤):", combined);

  //   // –ß–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å
  //   setTimeout(() => {
  //     console.log("üïí –≠—Ç–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—ã–ª –∞–∫—Ç—É–∞–ª–µ–Ω 5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥:", combined);
  //   }, 300000); // 5 –º–∏–Ω—É—Ç = 300 000 –º—Å
}

console.log("üß© seleDictionary:", seleDictionary);
console.log("üß© checkboxes:", checkboxes);

// --- –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π ---
seleDictionary.addEventListener("change", handleSelectChange);
checkboxes.forEach((cb) => cb.addEventListener("change", updateLangs));

export { getRequestAdd };

// // –°–ª–æ–≤–∞—Ä—å —Å–ª–æ–≤–∞—Ä–µ–π
// const dictMap = {
//   "English dictionary": {
//     code: "En",
//     url: "https://raw.githubusercontent.com/sergeyif1/DictatingEnglishSpeaker/main/dbEn.json",
//   },
//   "Deutsch W√∂rterbuch": {
//     code: "De",
//     url: "https://raw.githubusercontent.com/sergeyif1/DictatingEnglishSpeaker/main/dbDeu.json",
//   },
//   "GriechŒπŒ∫œå ŒªŒµŒæŒπŒ∫œå": {
//     code: "Gr",
//     url: "https://raw.githubusercontent.com/sergeyif1/DictatingEnglishSpeaker/main/dbGr.json",
//   },
//   "Plskie s≈Çownictwo": {
//     code: "Pl",
//     url: "https://raw.githubusercontent.com/sergeyif1/DictatingEnglishSpeaker/main/dbPl.json",
//   },
// };
