{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://dictatingenglishspeaker.loc/./js/modules/IdDataHandler.js","webpack://dictatingenglishspeaker.loc/./js/modules/buttonsClickHandler.js","webpack://dictatingenglishspeaker.loc/./js/modules/countdownTimer.js","webpack://dictatingenglishspeaker.loc/./js/modules/getUtterance.js","webpack://dictatingenglishspeaker.loc/./js/modules/myModule.js","webpack://dictatingenglishspeaker.loc/./js/modules/processLines.js","webpack://dictatingenglishspeaker.loc/webpack/bootstrap","webpack://dictatingenglishspeaker.loc/webpack/runtime/define property getters","webpack://dictatingenglishspeaker.loc/webpack/runtime/hasOwnProperty shorthand","webpack://dictatingenglishspeaker.loc/webpack/runtime/make namespace object","webpack://dictatingenglishspeaker.loc/./js/script.js"],"sourcesContent":["import myModule from \"./myModule\";\r\n\r\nconst IdDataHandler = {\r\n  existingUseID: function (currentButton) {\r\n    const useID = inputElement.value;\r\n    const sec = Number(pintSec.value) * 1000;\r\n    myModule.words(useID, sec, currentButton);\r\n  },\r\n};\r\nconst inputElement = document.querySelector(\".form-point\");\r\nconst pintSec = document.querySelector(\"#gap\");\r\n\r\nexport default IdDataHandler;\r\n","import IdDataHandler from \"./IdDataHandler.js\";\r\n\r\nlet currentButton;\r\n\r\nconst buttonsClickHandler = {\r\n  handleClick: function (event) {\r\n    const target = event.target;\r\n    currentButton = target.id;\r\n    // console.log(event.target, target.id);\r\n\r\n    if (target && target.classList.contains(PLAY)) {\r\n      switch (target.className) {\r\n        case PLAY:\r\n          speechSynthesis.cancel();\r\n          IdDataHandler.existingUseID(target, currentButton);\r\n\r\n          break;\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nconst PLAY = \"play\";\r\n\r\nexport { currentButton };\r\nexport default buttonsClickHandler;\r\n","const countdown = (seconds, initialSeconds) => {\r\n  const countdownElement = document.getElementById(\"countdown\");\r\n  const circle = document.querySelector(\".progress-ring__circle\");\r\n  const endDot = document.querySelector(\".progress-ring__dot\"); // Новый элемент для точки\r\n  const radius = circle.r.baseVal.value;\r\n  const circumference = 2 * Math.PI * radius;\r\n\r\n  circle.style.strokeDasharray = `${circumference} ${circumference}`;\r\n  circle.style.strokeDashoffset = circumference;\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${String(minutes).padStart(2, \"0\")}:${String(\r\n      remainingSeconds\r\n    ).padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const setProgress = (percent) => {\r\n    const offset = circumference - (percent / 100) * circumference;\r\n    circle.style.strokeDashoffset = offset;\r\n\r\n    const angle = ((360 * percent) / 100) * (Math.PI / 180); // Угол в радианах\r\n    const x = 60 + radius * Math.cos(angle - Math.PI / 2); // Вычисляем x-координату точки\r\n    const y = 60 + radius * Math.sin(angle - Math.PI / 2); // Вычисляем y-координату точки\r\n    endDot.setAttribute(\"cx\", x);\r\n    endDot.setAttribute(\"cy\", y);\r\n  };\r\n\r\n  const timer = setInterval(() => {\r\n    countdownElement.textContent = formatTime(seconds);\r\n    const progress = (seconds / initialSeconds) * 100;\r\n    setProgress(progress);\r\n\r\n    if (seconds <= 0) {\r\n      clearInterval(timer);\r\n      countdownElement.textContent = \"Время истекло!\";\r\n    }\r\n    seconds--;\r\n  }, 1000);\r\n};\r\n\r\nexport default countdown;\r\n","const voiceList = document.querySelector(\"#voiceSelect\");\r\nconst synth = speechSynthesis;\r\n\r\nexport function voices() {\r\n  voiceList.innerHTML = \"\";\r\n  let availableVoices = synth.getVoices();\r\n  let defaultVoice = getDefaultVoice(availableVoices);\r\n\r\n  availableVoices.forEach((voice) => {\r\n    let selected = voice === defaultVoice ? \"selected\" : \"\";\r\n\r\n    let option = `<option value=\"${voice.name}\" ${selected}>${voice.name} (${voice.lang})</option>`;\r\n\r\n    voiceList.insertAdjacentHTML(\"beforeend\", option);\r\n  });\r\n}\r\n\r\nsynth.onvoiceschanged = voices;\r\n\r\nfunction getDefaultVoice(voices) {\r\n  return voices.find(\r\n    (voice) => voice.lang === \"en-US\" || voice.lang === \"en-GB\"\r\n  );\r\n}\r\n\r\nconst voicePlay = {\r\n  getUtterance: function (text) {\r\n    // console.log(text);\r\n    const availableVoices = speechSynthesis.getVoices();\r\n    const selectedVoiceName = voiceList.value;\r\n\r\n    if (availableVoices.length > 0) {\r\n      const selectedVoice = availableVoices.find(\r\n        (voice) => voice.name === selectedVoiceName\r\n      );\r\n      //3.Создаем экземпляр SpeechSynthesisUtterance (\"utterance\" можно перевести как \"выражение текста словами\")\r\n      const U = new SpeechSynthesisUtterance(text);\r\n      // Передаем голос и другие настройки экземпляру\r\n      U.voice = selectedVoice;\r\n      U.lang = selectedVoice.lang;\r\n      U.volume = 1;\r\n\r\n      return U;\r\n    } else {\r\n      console.error(\"No available voices found.\");\r\n      return null;\r\n    }\r\n  },\r\n};\r\nexport default voicePlay;\r\n","import processLines from \"./processLines\";\r\nimport countdown from \"./countdownTimer\";\r\n\r\nconst myModule = {\r\n  words: async function (startID, sec) {\r\n    let currentID = startID; // Инициализируем текущий ID\r\n\r\n    // 1. Указываем путь к файлу\r\n    const filePath = \"../db.json\";\r\n    const foundObjects = []; // Массив для хранения найденных объектов\r\n\r\n    try {\r\n      // 2. Запрос данных через fetch API\r\n      const response = await fetch(filePath);\r\n      console.log(\"Файл загружен\");\r\n\r\n      // 3. Обрабатываем ошибку соединения\r\n      if (!response.ok) {\r\n        throw new Error(\"Ошибка при загрузке файла\");\r\n      }\r\n\r\n      // 4. Получаем поток данных из тела ответа\r\n      const stream = response.body;\r\n      console.log(\"Поток данных получен\", stream);\r\n\r\n      // 5. Создаем объект ReadableStreamDefaultReader для чтения потока\r\n      const reader = stream.getReader();\r\n      console.log(\"Читатель потока создан\", reader);\r\n\r\n      // 6. Распарсиваем поток\r\n      const decoder = new TextDecoder();\r\n      let result = \"\";\r\n      let done = false;\r\n\r\n      while (!done) {\r\n        const { value, done: streamDone } = await reader.read();\r\n        if (value) {\r\n          result += decoder.decode(value, { stream: !streamDone });\r\n        }\r\n        done = streamDone;\r\n      }\r\n\r\n      const jsonData = JSON.parse(result);\r\n      console.log(\"Данные распарсены\", jsonData);\r\n\r\n      // Функция для чтения следующей строки с задержкой\r\n      async function readNextString() {\r\n        // Начинаем читать поток с указанного ID\r\n        const searchString = `\"id\": \"${currentID}\"`;\r\n        const startIndex = result.indexOf(searchString);\r\n\r\n        if (startIndex !== -1) {\r\n          const startBracketIndex = result.lastIndexOf(\"{\", startIndex);\r\n          const endBracketIndex = result.indexOf(\"}\", startIndex) + 1;\r\n          if (startBracketIndex !== -1 && endBracketIndex !== -1) {\r\n            const dataChunk = result.substring(\r\n              startBracketIndex,\r\n              endBracketIndex\r\n            );\r\n            // console.log(\"Прочитанная строка:\", dataChunk);\r\n\r\n            // Добавляем объект в массив найденных объектов\r\n            const foundObject = JSON.parse(dataChunk);\r\n            foundObjects.push(foundObject);\r\n\r\n            // Увеличиваем текущий ID на 1\r\n            currentID++;\r\n\r\n            // Добавляем задержку в секундах перед выполнением следующего задания\r\n            await new Promise((resolve) => setTimeout(resolve, sec));\r\n\r\n            // Читаем следующую строку после задержки\r\n            // console.log(\r\n            //   \"Следующая прочитанная строка после задержки:\",\r\n            //   dataChunk\r\n            // );\r\n\r\n            const initialSeconds = sec / 1000;\r\n            countdown(initialSeconds, initialSeconds);\r\n            processLines(dataChunk);\r\n\r\n            // Рекурсивный вызов функции для чтения следующей строки\r\n            await readNextString();\r\n          } else {\r\n            console.log(\"Начало или конец строки не найдены.\");\r\n          }\r\n        } else {\r\n          console.log(`ID \"${currentID}\" Працесс закончен.Спасибо!`);\r\n        }\r\n      }\r\n\r\n      // Вызываем функцию чтения строки\r\n      await readNextString();\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n    }\r\n  },\r\n};\r\n\r\nexport default myModule;\r\n\r\n//---------------------------------------------------\r\n// import processLines from \"./processLines\";\r\n\r\n// const myModule = {\r\n//   words: async function (useID, sec) {\r\n//     const filePath = \"../db.json\";\r\n\r\n//     try {\r\n//       const response = await fetch(filePath);\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Ошибка при загрузке файла\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n//       // Ищем объект в массиве \"dictionary\" по значению \"id\"\r\n//       const foundIndex = data.dictionary.findIndex(\r\n//         (dataWord) => dataWord.id === useID\r\n//       );\r\n\r\n//       if (foundIndex !== -1) {\r\n//         // Создаем поток для оставшейся части массива \"dictionary\" от найденного индекса\r\n//         const remainingData = data.dictionary.slice(foundIndex);\r\n\r\n//         // Очищаем предыдущий объект\r\n//         let previousObject = null;\r\n\r\n//         // Читаем объекты из потока и выводим их в консоль с задержкой\r\n//         for (const dataWord of remainingData) {\r\n//           // Очищаем предыдущий объект\r\n//           if (previousObject !== null) {\r\n//             console.clear();\r\n//           }\r\n//           // Выводим текущий объект в консоль  и запускаем и запускаем processLines()\r\n//           processLines(dataWord);\r\n//           console.log(dataWord);\r\n\r\n//           // Задержка в 2 секунды\r\n//           await new Promise((resolve) => setTimeout(resolve, sec));\r\n//           previousObject = dataWord;\r\n//         }\r\n//       } else {\r\n//         console.log(\"Объект с указанным id не найден\");\r\n//       }\r\n//       //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   },\r\n// };\r\n\r\n// export default myModule;\r\n","import voicePlay from \"./getUtterance\";\r\nimport { currentButton } from \"./buttonsClickHandler\";\r\n\r\nasync function processLines(dataChunk) {\r\n  // Парсим JSON-строку в объект\r\n  const parsedData = JSON.parse(dataChunk);\r\n  const { id, name, title } = parsedData;\r\n  // console.log(\"processLines:\", id, name, title);\r\n  let text;\r\n\r\n  if (currentButton === \"but1\") {\r\n    text = `${name}`;\r\n    console.log(`${id} - ${text}`);\r\n  } else if (currentButton === \"but2\") {\r\n    text = `${title}`;\r\n    console.log(`${id} - ${text}`);\r\n  }\r\n\r\n  const Utl = voicePlay.getUtterance(text);\r\n  speechSynthesis.speak(Utl); // speechSynthesis - он самостоятельный запускается с любого места\r\n\r\n  document.getElementById(\"text1\").value = `${id} - ${name}`;\r\n  document.getElementById(\"text2\").value = `${id} - ${title}`;\r\n  document.cookie = `id=${id}; path=/`;\r\n}\r\n\r\nexport default processLines;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import buttonsClickHandler from \"./modules/buttonsClickHandler\";\r\nimport { voices } from \"./modules/getUtterance\";\r\n\r\ndocument.addEventListener(\"keydown\", function (KeyboardEvent) {\r\n  // console.log(KeyboardEvent.key);\r\n  if (KeyboardEvent.key === \"Enter\") {\r\n    KeyboardEvent.preventDefault();\r\n  }\r\n});\r\n\r\nbut1.addEventListener(\"click\", (event) => {\r\n  buttonsClickHandler.handleClick(event);\r\n});\r\n\r\nbut2.addEventListener(\"click\", (event) => {\r\n  buttonsClickHandler.handleClick(event);\r\n});\r\n\r\nvoices();\r\n"],"names":["myModule","IdDataHandler","existingUseID","currentButton","useID","inputElement","value","sec","Number","pintSec","words","document","querySelector","buttonsClickHandler","handleClick","event","target","id","classList","contains","PLAY","className","speechSynthesis","cancel","countdown","seconds","initialSeconds","countdownElement","getElementById","circle","endDot","radius","r","baseVal","circumference","Math","PI","style","strokeDasharray","concat","strokeDashoffset","formatTime","minutes","floor","remainingSeconds","String","padStart","setProgress","percent","offset","angle","x","cos","y","sin","setAttribute","timer","setInterval","textContent","progress","clearInterval","voiceList","synth","voices","innerHTML","availableVoices","getVoices","defaultVoice","getDefaultVoice","forEach","voice","selected","option","name","lang","insertAdjacentHTML","onvoiceschanged","find","voicePlay","getUtterance","text","selectedVoiceName","length","selectedVoice","U","SpeechSynthesisUtterance","volume","console","error","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","processLines","_words","_callee2","startID","currentID","filePath","foundObjects","readNextString","response","stream","reader","decoder","result","_yield$reader$read","streamDone","jsonData","_callee2$","_context2","_ref","_callee","searchString","startIndex","startBracketIndex","endBracketIndex","dataChunk","foundObject","_callee$","_context","indexOf","lastIndexOf","substring","JSON","parse","setTimeout","log","fetch","ok","body","getReader","TextDecoder","read","decode","t0","_x","_x2","_processLines","parsedData","title","Utl","speak","cookie","addEventListener","KeyboardEvent","preventDefault","but1","but2"],"sourceRoot":""}