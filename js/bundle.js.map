{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAqC;AAErC,IAAMC,aAAa,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC;AAE9D,IAAIC,MAAM;AAEH,SAASC,aAAaA,CAAA,EAAG;EAC9B,IAAMC,cAAc,GAAGJ,QAAQ,CAACK,aAAa,CAC3C,uBACF,CAAC,CAACC,OAAO;EACT,IAAMC,cAAc,GAAGP,QAAQ,CAACK,aAAa,CAC3C,uBACF,CAAC,CAACC,OAAO;EAET,IAAIF,cAAc,EAAE;IAClBF,MAAM,GAAGH,aAAa,CAAC,CAAC,CAAC,CAACS,KAAK;IAC/B;EACF,CAAC,MAAM,IAAID,cAAc,EAAE;IACzB,IAAME,QAAQ,GAAGT,QAAQ,CAACU,MAAM,CAC7BC,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKA,GAAG,CAACC,UAAU,CAAC,KAAK,CAAC;IAAA,EAAC;IAEvC,IAAIL,QAAQ,EAAE;MACZP,MAAM,GAAGO,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC/BI,OAAO,CAACC,GAAG,+GAAAC,MAAA,CAA0Bf,MAAM,CAAE,CAAC;IAChD,CAAC,MAAM;MACLa,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC;EACF,CAAC,MAAM;IACLD,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;EAChE;EAEA,IAAId,MAAM,EAAE;IACVJ,oDAAQ,CAACoB,KAAK,CAAChB,MAAM,CAAC;EACxB;AACF;;AAEA;AACO,SAASiB,SAASA,CAAA,EAAG;EAC1B,OAAOjB,MAAM;AACf;AAEA,iEAAe;EAAEC,aAAa,EAAbA,aAAa;EAAEgB,SAAS,EAATA;AAAU,CAAC;;;;;;;;;;;;;;;;AC1CN;AAErC,IAAIC,cAAc;AAElB,IAAMC,8BAA8B,GAAG;EACrCC,YAAY,EAAE,SAAAA,aAAUC,KAAK,EAAE;IAC7B,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;IAC3BJ,cAAc,GAAGI,MAAM,CAACC,EAAE;IAE1B,QAAQD,MAAM,CAACE,SAAS;MACtB,KAAK,OAAO;QACVX,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnCW,eAAe,CAACC,KAAK,CAAC,CAAC;QACvB9B,oDAAQ,CAAC8B,KAAK,CAAC,CAAC;QAChB;MACF,KAAK,QAAQ;QACXb,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpCW,eAAe,CAACE,MAAM,CAAC,CAAC;QACxB/B,oDAAQ,CAAC+B,MAAM,CAAC,CAAC;QACjB;MACF;QACEd,OAAO,CAACC,GAAG,qBAAAC,MAAA,CAAqBO,MAAM,CAACE,SAAS,CAAE,CAAC;IACvD;EACF;AACF,CAAC;AAEyB;AAC1B,iEAAeL,8BAA8B;;;;;;;;;;;;;;;;;;AC3BM;AACd;AACM;AAE3C,IAAIU,cAAc;AAElB,IAAMC,uBAAuB,GAAG;EAC9BC,YAAY,EAAE,SAAAA,aAAUV,KAAK,EAAE;IAC7B,IAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;IAC3BO,cAAc,GAAGP,MAAM,CAACC,EAAE;IAE1B,QAAQD,MAAM,CAACE,SAAS;MACtB,KAAK,MAAM;QACTX,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCW,eAAe,CAACO,MAAM,CAAC,CAAC;QACxB/B,gEAAa,CAAC,CAAC;QACf2B,uDAAW,CAACK,KAAK,CAAC,CAAC;QACnBrC,oDAAQ,CAACsC,KAAK,CAAC,CAAC;QAChB;QACA;MACF;QACErB,OAAO,CAACC,GAAG,qBAAAC,MAAA,CAAqBO,MAAM,CAACE,SAAS,CAAE,CAAC;IACvD;EACF;AACF,CAAC;AAED,IAAMW,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA;EAAA,OAASN,cAAc;AAAA;AAEjB;AAC7B,iEAAeC,uBAAuB;;;;;;;;;;;;;;AC7BtC,IAAMM,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B;EACAtC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAC,CAACsC,OAAO,CAAC,UAACC,QAAQ,EAAK;IAC3DA,QAAQ,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAY;MAAA,IAAAC,KAAA;MAC9C,IAAI,IAAI,CAACpC,OAAO,EAAE;QAChB;QACAN,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAC,CAACsC,OAAO,CAAC,UAACI,GAAG,EAAK;UACtD,IAAIA,GAAG,KAAKD,KAAI,EAAE;YAChBC,GAAG,CAACC,QAAQ,GAAG,IAAI;UACrB;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACA5C,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAC,CAACsC,OAAO,CAAC,UAACI,GAAG,EAAK;UACtDA,GAAG,CAACC,QAAQ,GAAG,KAAK;QACtB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAC,MAAM,CAACJ,gBAAgB,CAAC,MAAM,EAAE,YAAY;IAC1C,IAAMK,aAAa,GAAG9C,QAAQ,CAACK,aAAa,CAAC,2BAA2B,CAAC;IACzE,IAAIyC,aAAa,IAAIA,aAAa,CAACxC,OAAO,EAAE;MAC1C;MACAN,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAC,CAACsC,OAAO,CAAC,UAACI,GAAG,EAAK;QACtD,IAAIA,GAAG,KAAKG,aAAa,EAAE;UACzBH,GAAG,CAACC,QAAQ,GAAG,IAAI;QACrB;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ,CAAC;AAED,iEAAeN,eAAe;;;;;;;;;;;;;;;AClCO;AAErC,IAAMR,WAAW,GAAG;EAClBK,KAAK,EAAE,SAAAA,MAAA,EAAY;IACjB,IAAMY,eAAe,GAAG/C,QAAQ,CAACK,aAAa,CAAC,cAAc,CAAC,CAACG,KAAK;IACpE,IAAMwC,kBAAkB,GAAGhD,QAAQ,CAACK,aAAa,CAC/C,uBACF,CAAC,CAACC,OAAO;IAET,IAAI,CAAC0C,kBAAkB,IAAI,CAACD,eAAe,EAAE;MAC3CE,KAAK,CACH,mEACF,CAAC;IACH;;IAEA;IACAnD,oDAAQ,CAACoD,aAAa,CAACH,eAAe,CAAC;EACzC;AACF,CAAC;AAED,iEAAejB,WAAW;;;;;;;;;;;;;;ACpB1B,IAAMqB,SAAS,GAAG,SAAZA,SAASA,CAAIC,OAAO,EAAEC,cAAc,EAAK;EAC7C,IAAMC,gBAAgB,GAAGtD,QAAQ,CAACuD,cAAc,CAAC,WAAW,CAAC;EAC7D,IAAMC,MAAM,GAAGxD,QAAQ,CAACK,aAAa,CAAC,wBAAwB,CAAC;EAC/D,IAAMoD,MAAM,GAAGzD,QAAQ,CAACK,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;EAC9D,IAAMqD,MAAM,GAAGF,MAAM,CAACG,CAAC,CAACC,OAAO,CAACpD,KAAK;EACrC,IAAMqD,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGL,MAAM;EAE1CF,MAAM,CAACQ,KAAK,CAACC,eAAe,MAAAhD,MAAA,CAAM4C,aAAa,OAAA5C,MAAA,CAAI4C,aAAa,CAAE;EAClEL,MAAM,CAACQ,KAAK,CAACE,gBAAgB,GAAGL,aAAa;EAE7C,IAAMM,UAAU,GAAG,SAAbA,UAAUA,CAAIf,OAAO,EAAK;IAC9B,IAAMgB,OAAO,GAAGN,IAAI,CAACO,KAAK,CAACjB,OAAO,GAAG,EAAE,CAAC;IACxC,IAAMkB,gBAAgB,GAAGlB,OAAO,GAAG,EAAE;IACrC,UAAAnC,MAAA,CAAUsD,MAAM,CAACH,OAAO,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,OAAAvD,MAAA,CAAIsD,MAAM,CAClDD,gBACF,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACpB,CAAC;EAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAO,EAAK;IAC/B,IAAMC,MAAM,GAAGd,aAAa,GAAIa,OAAO,GAAG,GAAG,GAAIb,aAAa;IAC9DL,MAAM,CAACQ,KAAK,CAACE,gBAAgB,GAAGS,MAAM;IAEtC,IAAMC,KAAK,GAAK,GAAG,GAAGF,OAAO,GAAI,GAAG,IAAKZ,IAAI,CAACC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACzD,IAAMc,CAAC,GAAG,EAAE,GAAGnB,MAAM,GAAGI,IAAI,CAACgB,GAAG,CAACF,KAAK,GAAGd,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvD,IAAMgB,CAAC,GAAG,EAAE,GAAGrB,MAAM,GAAGI,IAAI,CAACkB,GAAG,CAACJ,KAAK,GAAGd,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACvDN,MAAM,CAACwB,YAAY,CAAC,IAAI,EAAEJ,CAAC,CAAC;IAC5BpB,MAAM,CAACwB,YAAY,CAAC,IAAI,EAAEF,CAAC,CAAC;EAC9B,CAAC;EAED,IAAMG,KAAK,GAAGC,WAAW,CAAC,YAAM;IAC9B7B,gBAAgB,CAAC8B,WAAW,GAAGjB,UAAU,CAACf,OAAO,CAAC;IAClD,IAAMiC,QAAQ,GAAIjC,OAAO,GAAGC,cAAc,GAAI,GAAG;IACjDoB,WAAW,CAACY,QAAQ,CAAC;IAErB,IAAIjC,OAAO,IAAI,CAAC,EAAE;MAChBkC,aAAa,CAACJ,KAAK,CAAC;MACpB5B,gBAAgB,CAAC8B,WAAW,GAAG,gBAAgB;IACjD;IACAhC,OAAO,EAAE;EACX,CAAC,EAAE,IAAI,CAAC;AACV,CAAC;AAED,iEAAeD,SAAS;;;;;;;;;;;;;;;AC1CxB,IAAMoC,SAAS,GAAGvF,QAAQ,CAACK,aAAa,CAAC,cAAc,CAAC;AACxD,IAAMmF,KAAK,GAAG7D,eAAe;AAEtB,SAAS8D,MAAMA,CAAA,EAAG;EACvBF,SAAS,CAACG,SAAS,GAAG,EAAE;EACxB,IAAIC,eAAe,GAAGH,KAAK,CAACI,SAAS,CAAC,CAAC;EACvC,IAAIC,YAAY,GAAGC,eAAe,CAACH,eAAe,CAAC;EAEnDA,eAAe,CAACpD,OAAO,CAAC,UAACwD,KAAK,EAAK;IACjC,IAAIC,QAAQ,GAAGD,KAAK,KAAKF,YAAY,GAAG,UAAU,GAAG,EAAE;IAEvD,IAAII,MAAM,sBAAAhF,MAAA,CAAqB8E,KAAK,CAACG,IAAI,SAAAjF,MAAA,CAAK+E,QAAQ,OAAA/E,MAAA,CAAI8E,KAAK,CAACG,IAAI,QAAAjF,MAAA,CAAK8E,KAAK,CAACI,IAAI,eAAY;IAE/FZ,SAAS,CAACa,kBAAkB,CAAC,WAAW,EAAEH,MAAM,CAAC;EACnD,CAAC,CAAC;AACJ;AAEAT,KAAK,CAACa,eAAe,GAAGZ,MAAM;AAE9B,SAASK,eAAeA,CAACL,MAAM,EAAE;EAC/B,OAAOA,MAAM,CAAC7E,IAAI,CAChB,UAACmF,KAAK;IAAA,OAAKA,KAAK,CAACI,IAAI,KAAK,OAAO,IAAIJ,KAAK,CAACI,IAAI,KAAK,OAAO;EAAA,CAC7D,CAAC;AACH;AAEA,IAAMG,SAAS,GAAG;EAChBC,YAAY,EAAE,SAAAA,aAAUC,IAAI,EAAE;IAC5B,IAAMC,IAAI,GAAGzG,QAAQ,CAACuD,cAAc,CAAC,OAAO,CAAC,CAAC/C,KAAK;IACnD,IAAMkG,KAAK,GAAG1G,QAAQ,CAACuD,cAAc,CAAC,OAAO,CAAC,CAAC/C,KAAK;IAEpD,IAAMmF,eAAe,GAAGhE,eAAe,CAACiE,SAAS,CAAC,CAAC;IACnD,IAAMe,iBAAiB,GAAGpB,SAAS,CAAC/E,KAAK;IAEzC,IAAImF,eAAe,CAACiB,MAAM,GAAG,CAAC,EAAE;MAC9B,IAAMC,aAAa,GAAGlB,eAAe,CAAC/E,IAAI,CACxC,UAACmF,KAAK;QAAA,OAAKA,KAAK,CAACG,IAAI,KAAKS,iBAAiB;MAAA,CAC7C,CAAC;MAED,IAAMG,CAAC,GAAG,IAAIC,wBAAwB,CAACP,IAAI,CAAC;MAC5CM,CAAC,CAACf,KAAK,GAAGc,aAAa;MACvBC,CAAC,CAACX,IAAI,GAAGU,aAAa,CAACV,IAAI;MAC3BW,CAAC,CAACE,MAAM,GAAG,CAAC;MACZF,CAAC,CAACL,IAAI,GAAGA,IAAI;MACbK,CAAC,CAACJ,KAAK,GAAGA,KAAK;MAEf,OAAOI,CAAC;IACV,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;AACF,CAAC;AAED,iEAAeR,SAAS;;;;;;;;;;;;;;;;;+CCnDxB,qJAAAW,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAvD,CAAA,GAAAyD,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAA3D,CAAA,CAAA4D,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAN,CAAA,EAAAD,CAAA,EAAAvD,CAAA,IAAAwD,CAAA,CAAAD,CAAA,IAAAvD,CAAA,CAAAnD,KAAA,KAAAkH,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAf,CAAA,EAAAD,CAAA,EAAAvD,CAAA,WAAAyD,MAAA,CAAAK,cAAA,CAAAN,CAAA,EAAAD,CAAA,IAAA1G,KAAA,EAAAmD,CAAA,EAAAwE,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAlB,CAAA,CAAAD,CAAA,WAAAgB,MAAA,mBAAAf,CAAA,IAAAe,MAAA,YAAAA,OAAAf,CAAA,EAAAD,CAAA,EAAAvD,CAAA,WAAAwD,CAAA,CAAAD,CAAA,IAAAvD,CAAA,gBAAA2E,KAAAnB,CAAA,EAAAD,CAAA,EAAAvD,CAAA,EAAA2D,CAAA,QAAAI,CAAA,GAAAR,CAAA,IAAAA,CAAA,CAAAG,SAAA,YAAAkB,SAAA,GAAArB,CAAA,GAAAqB,SAAA,EAAAX,CAAA,GAAAR,MAAA,CAAAoB,MAAA,CAAAd,CAAA,CAAAL,SAAA,GAAAS,CAAA,OAAAW,OAAA,CAAAnB,CAAA,gBAAAE,CAAA,CAAAI,CAAA,eAAApH,KAAA,EAAAkI,gBAAA,CAAAvB,CAAA,EAAAxD,CAAA,EAAAmE,CAAA,MAAAF,CAAA,aAAAe,SAAAxB,CAAA,EAAAD,CAAA,EAAAvD,CAAA,mBAAAiF,IAAA,YAAAC,GAAA,EAAA1B,CAAA,CAAA2B,IAAA,CAAA5B,CAAA,EAAAvD,CAAA,cAAAwD,CAAA,aAAAyB,IAAA,WAAAC,GAAA,EAAA1B,CAAA,QAAAD,CAAA,CAAAoB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAnE,CAAA,gBAAAwD,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAnB,MAAA,CAAAmB,CAAA,EAAAzB,CAAA,qCAAA0B,CAAA,GAAAlC,MAAA,CAAAmC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAA7F,CAAA,IAAA2D,CAAA,CAAAwB,IAAA,CAAAU,CAAA,EAAA5B,CAAA,MAAAyB,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAA/B,SAAA,GAAAkB,SAAA,CAAAlB,SAAA,GAAAD,MAAA,CAAAoB,MAAA,CAAAa,CAAA,YAAAM,sBAAAxC,CAAA,gCAAA5E,OAAA,WAAA2E,CAAA,IAAAgB,MAAA,CAAAf,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAAyC,OAAA,CAAA1C,CAAA,EAAAC,CAAA,sBAAA0C,cAAA1C,CAAA,EAAAD,CAAA,aAAA4C,OAAAnG,CAAA,EAAA6D,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAAxB,CAAA,CAAAxD,CAAA,GAAAwD,CAAA,EAAAK,CAAA,mBAAAM,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAxH,KAAA,SAAAuI,CAAA,gBAAAgB,OAAA,CAAAhB,CAAA,KAAAzB,CAAA,CAAAwB,IAAA,CAAAC,CAAA,eAAA7B,CAAA,CAAA8C,OAAA,CAAAjB,CAAA,CAAAkB,OAAA,EAAAC,IAAA,WAAA/C,CAAA,IAAA2C,MAAA,SAAA3C,CAAA,EAAAO,CAAA,EAAAE,CAAA,gBAAAT,CAAA,IAAA2C,MAAA,UAAA3C,CAAA,EAAAO,CAAA,EAAAE,CAAA,QAAAV,CAAA,CAAA8C,OAAA,CAAAjB,CAAA,EAAAmB,IAAA,WAAA/C,CAAA,IAAAa,CAAA,CAAAxH,KAAA,GAAA2G,CAAA,EAAAO,CAAA,CAAAM,CAAA,gBAAAb,CAAA,WAAA2C,MAAA,UAAA3C,CAAA,EAAAO,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAAlF,CAAA,EAAA6D,CAAA,oBAAAhH,KAAA,WAAAA,MAAA2G,CAAA,EAAAG,CAAA,aAAA6C,2BAAA,eAAAjD,CAAA,WAAAA,CAAA,EAAAvD,CAAA,IAAAmG,MAAA,CAAA3C,CAAA,EAAAG,CAAA,EAAAJ,CAAA,EAAAvD,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAuG,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAzB,iBAAAxB,CAAA,EAAAvD,CAAA,EAAA2D,CAAA,QAAAE,CAAA,GAAAuB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAJ,CAAA,KAAAyB,CAAA,QAAAmB,KAAA,sCAAA5C,CAAA,KAAA0B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAApH,KAAA,EAAA2G,CAAA,EAAAkD,IAAA,eAAA/C,CAAA,CAAAgD,MAAA,GAAA5C,CAAA,EAAAJ,CAAA,CAAAuB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAR,CAAA,CAAAiD,QAAA,MAAAzC,CAAA,QAAAE,CAAA,GAAAwC,mBAAA,CAAA1C,CAAA,EAAAR,CAAA,OAAAU,CAAA,QAAAA,CAAA,KAAAjD,CAAA,mBAAAiD,CAAA,qBAAAV,CAAA,CAAAgD,MAAA,EAAAhD,CAAA,CAAAmD,IAAA,GAAAnD,CAAA,CAAAoD,KAAA,GAAApD,CAAA,CAAAuB,GAAA,sBAAAvB,CAAA,CAAAgD,MAAA,QAAA9C,CAAA,KAAAuB,CAAA,QAAAvB,CAAA,GAAA0B,CAAA,EAAA5B,CAAA,CAAAuB,GAAA,EAAAvB,CAAA,CAAAqD,iBAAA,CAAArD,CAAA,CAAAuB,GAAA,uBAAAvB,CAAA,CAAAgD,MAAA,IAAAhD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAAuB,GAAA,GAAArB,CAAA,GAAAyB,CAAA,MAAAI,CAAA,GAAAV,QAAA,CAAAzB,CAAA,EAAAvD,CAAA,EAAA2D,CAAA,oBAAA+B,CAAA,CAAAT,IAAA,QAAApB,CAAA,GAAAF,CAAA,CAAA+C,IAAA,GAAAnB,CAAA,GAAAF,CAAA,EAAAK,CAAA,CAAAR,GAAA,KAAA9D,CAAA,qBAAAvE,KAAA,EAAA6I,CAAA,CAAAR,GAAA,EAAAwB,IAAA,EAAA/C,CAAA,CAAA+C,IAAA,kBAAAhB,CAAA,CAAAT,IAAA,KAAApB,CAAA,GAAA0B,CAAA,EAAA5B,CAAA,CAAAgD,MAAA,YAAAhD,CAAA,CAAAuB,GAAA,GAAAQ,CAAA,CAAAR,GAAA,mBAAA2B,oBAAAtD,CAAA,EAAAvD,CAAA,QAAA2D,CAAA,GAAA3D,CAAA,CAAA2G,MAAA,EAAA9C,CAAA,GAAAN,CAAA,CAAAW,QAAA,CAAAP,CAAA,OAAAE,CAAA,KAAAL,CAAA,SAAAxD,CAAA,CAAA4G,QAAA,qBAAAjD,CAAA,IAAAJ,CAAA,CAAAW,QAAA,eAAAlE,CAAA,CAAA2G,MAAA,aAAA3G,CAAA,CAAAkF,GAAA,GAAA1B,CAAA,EAAAqD,mBAAA,CAAAtD,CAAA,EAAAvD,CAAA,eAAAA,CAAA,CAAA2G,MAAA,kBAAAhD,CAAA,KAAA3D,CAAA,CAAA2G,MAAA,YAAA3G,CAAA,CAAAkF,GAAA,OAAAgC,SAAA,uCAAAvD,CAAA,iBAAAvC,CAAA,MAAA2C,CAAA,GAAAiB,QAAA,CAAAnB,CAAA,EAAAN,CAAA,CAAAW,QAAA,EAAAlE,CAAA,CAAAkF,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAAjF,CAAA,CAAA2G,MAAA,YAAA3G,CAAA,CAAAkF,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAAlF,CAAA,CAAA4G,QAAA,SAAAxF,CAAA,MAAA6C,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAAyC,IAAA,IAAA1G,CAAA,CAAAuD,CAAA,CAAA4D,UAAA,IAAAlD,CAAA,CAAApH,KAAA,EAAAmD,CAAA,CAAAoH,IAAA,GAAA7D,CAAA,CAAA8D,OAAA,eAAArH,CAAA,CAAA2G,MAAA,KAAA3G,CAAA,CAAA2G,MAAA,WAAA3G,CAAA,CAAAkF,GAAA,GAAA1B,CAAA,GAAAxD,CAAA,CAAA4G,QAAA,SAAAxF,CAAA,IAAA6C,CAAA,IAAAjE,CAAA,CAAA2G,MAAA,YAAA3G,CAAA,CAAAkF,GAAA,OAAAgC,SAAA,sCAAAlH,CAAA,CAAA4G,QAAA,SAAAxF,CAAA,cAAAkG,aAAA9D,CAAA,QAAAD,CAAA,KAAAgE,MAAA,EAAA/D,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAiE,QAAA,GAAAhE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAkE,UAAA,GAAAjE,CAAA,KAAAD,CAAA,CAAAmE,QAAA,GAAAlE,CAAA,WAAAmE,UAAA,CAAAC,IAAA,CAAArE,CAAA,cAAAsE,cAAArE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAAsE,UAAA,QAAAvE,CAAA,CAAA0B,IAAA,oBAAA1B,CAAA,CAAA2B,GAAA,EAAA1B,CAAA,CAAAsE,UAAA,GAAAvE,CAAA,aAAAuB,QAAAtB,CAAA,SAAAmE,UAAA,MAAAJ,MAAA,aAAA/D,CAAA,CAAA5E,OAAA,CAAA0I,YAAA,cAAAS,KAAA,iBAAAjC,OAAAvC,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAvD,CAAA,GAAAuD,CAAA,CAAAU,CAAA,OAAAjE,CAAA,SAAAA,CAAA,CAAAmF,IAAA,CAAA5B,CAAA,4BAAAA,CAAA,CAAA6D,IAAA,SAAA7D,CAAA,OAAAyE,KAAA,CAAAzE,CAAA,CAAAN,MAAA,SAAAY,CAAA,OAAAE,CAAA,YAAAqD,KAAA,aAAAvD,CAAA,GAAAN,CAAA,CAAAN,MAAA,OAAAU,CAAA,CAAAwB,IAAA,CAAA5B,CAAA,EAAAM,CAAA,UAAAuD,IAAA,CAAAvK,KAAA,GAAA0G,CAAA,CAAAM,CAAA,GAAAuD,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAvK,KAAA,GAAA2G,CAAA,EAAA4D,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAArD,CAAA,CAAAqD,IAAA,GAAArD,CAAA,gBAAAmD,SAAA,CAAAd,OAAA,CAAA7C,CAAA,kCAAAiC,iBAAA,CAAA9B,SAAA,GAAA+B,0BAAA,EAAA5B,CAAA,CAAAkC,CAAA,mBAAAlJ,KAAA,EAAA4I,0BAAA,EAAAhB,YAAA,SAAAZ,CAAA,CAAA4B,0BAAA,mBAAA5I,KAAA,EAAA2I,iBAAA,EAAAf,YAAA,SAAAe,iBAAA,CAAAyC,WAAA,GAAA1D,MAAA,CAAAkB,0BAAA,EAAApB,CAAA,wBAAAd,CAAA,CAAA2E,mBAAA,aAAA1E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAA2E,WAAA,WAAA5E,CAAA,KAAAA,CAAA,KAAAiC,iBAAA,6BAAAjC,CAAA,CAAA0E,WAAA,IAAA1E,CAAA,CAAAhB,IAAA,OAAAgB,CAAA,CAAA6E,IAAA,aAAA5E,CAAA,WAAAC,MAAA,CAAA4E,cAAA,GAAA5E,MAAA,CAAA4E,cAAA,CAAA7E,CAAA,EAAAiC,0BAAA,KAAAjC,CAAA,CAAA8E,SAAA,GAAA7C,0BAAA,EAAAlB,MAAA,CAAAf,CAAA,EAAAa,CAAA,yBAAAb,CAAA,CAAAE,SAAA,GAAAD,MAAA,CAAAoB,MAAA,CAAAkB,CAAA,GAAAvC,CAAA,KAAAD,CAAA,CAAAgF,KAAA,aAAA/E,CAAA,aAAA8C,OAAA,EAAA9C,CAAA,OAAAwC,qBAAA,CAAAE,aAAA,CAAAxC,SAAA,GAAAa,MAAA,CAAA2B,aAAA,CAAAxC,SAAA,EAAAS,CAAA,iCAAAZ,CAAA,CAAA2C,aAAA,GAAAA,aAAA,EAAA3C,CAAA,CAAAiF,KAAA,aAAAhF,CAAA,EAAAxD,CAAA,EAAA2D,CAAA,EAAAE,CAAA,EAAAE,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA0E,OAAA,OAAAxE,CAAA,OAAAiC,aAAA,CAAAvB,IAAA,CAAAnB,CAAA,EAAAxD,CAAA,EAAA2D,CAAA,EAAAE,CAAA,GAAAE,CAAA,UAAAR,CAAA,CAAA2E,mBAAA,CAAAlI,CAAA,IAAAiE,CAAA,GAAAA,CAAA,CAAAmD,IAAA,GAAAb,IAAA,WAAA/C,CAAA,WAAAA,CAAA,CAAAkD,IAAA,GAAAlD,CAAA,CAAA3G,KAAA,GAAAoH,CAAA,CAAAmD,IAAA,WAAApB,qBAAA,CAAAD,CAAA,GAAAxB,MAAA,CAAAwB,CAAA,EAAA1B,CAAA,gBAAAE,MAAA,CAAAwB,CAAA,EAAA9B,CAAA,iCAAAM,MAAA,CAAAwB,CAAA,6DAAAxC,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,QAAAD,CAAA,GAAAE,MAAA,CAAAD,CAAA,GAAAxD,CAAA,gBAAA2D,CAAA,IAAAJ,CAAA,EAAAvD,CAAA,CAAA4H,IAAA,CAAAjE,CAAA,UAAA3D,CAAA,CAAA2I,OAAA,aAAAvB,KAAA,WAAApH,CAAA,CAAAiD,MAAA,SAAAO,CAAA,GAAAxD,CAAA,CAAA4I,GAAA,QAAApF,CAAA,IAAAD,CAAA,SAAA6D,IAAA,CAAAvK,KAAA,GAAA2G,CAAA,EAAA4D,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAA7D,CAAA,CAAAuC,MAAA,GAAAA,MAAA,EAAAhB,OAAA,CAAApB,SAAA,KAAAyE,WAAA,EAAArD,OAAA,EAAAiD,KAAA,WAAAA,MAAAxE,CAAA,aAAAsF,IAAA,WAAAzB,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAAvD,CAAA,OAAAkD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAAzB,GAAA,GAAA1B,CAAA,OAAAmE,UAAA,CAAA/I,OAAA,CAAAiJ,aAAA,IAAAtE,CAAA,WAAAvD,CAAA,kBAAAA,CAAA,CAAA8I,MAAA,OAAAnF,CAAA,CAAAwB,IAAA,OAAAnF,CAAA,MAAAgI,KAAA,EAAAhI,CAAA,CAAA+I,KAAA,cAAA/I,CAAA,IAAAwD,CAAA,MAAAwF,IAAA,WAAAA,KAAA,SAAAtC,IAAA,WAAAlD,CAAA,QAAAmE,UAAA,IAAAG,UAAA,kBAAAtE,CAAA,CAAAyB,IAAA,QAAAzB,CAAA,CAAA0B,GAAA,cAAA+D,IAAA,KAAAjC,iBAAA,WAAAA,kBAAAzD,CAAA,aAAAmD,IAAA,QAAAnD,CAAA,MAAAvD,CAAA,kBAAAkJ,OAAAvF,CAAA,EAAAE,CAAA,WAAAI,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA3B,CAAA,EAAAvD,CAAA,CAAAoH,IAAA,GAAAzD,CAAA,EAAAE,CAAA,KAAA7D,CAAA,CAAA2G,MAAA,WAAA3G,CAAA,CAAAkF,GAAA,GAAA1B,CAAA,KAAAK,CAAA,aAAAA,CAAA,QAAA8D,UAAA,CAAA1E,MAAA,MAAAY,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAA4D,UAAA,CAAA9D,CAAA,GAAAI,CAAA,GAAAF,CAAA,CAAA+D,UAAA,iBAAA/D,CAAA,CAAAwD,MAAA,SAAA2B,MAAA,aAAAnF,CAAA,CAAAwD,MAAA,SAAAsB,IAAA,QAAA1E,CAAA,GAAAR,CAAA,CAAAwB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAV,CAAA,CAAAwB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAAwE,IAAA,GAAA9E,CAAA,CAAAyD,QAAA,SAAA0B,MAAA,CAAAnF,CAAA,CAAAyD,QAAA,gBAAAqB,IAAA,GAAA9E,CAAA,CAAA0D,UAAA,SAAAyB,MAAA,CAAAnF,CAAA,CAAA0D,UAAA,cAAAtD,CAAA,aAAA0E,IAAA,GAAA9E,CAAA,CAAAyD,QAAA,SAAA0B,MAAA,CAAAnF,CAAA,CAAAyD,QAAA,qBAAAnD,CAAA,QAAAoC,KAAA,qDAAAoC,IAAA,GAAA9E,CAAA,CAAA0D,UAAA,SAAAyB,MAAA,CAAAnF,CAAA,CAAA0D,UAAA,YAAAR,MAAA,WAAAA,OAAAzD,CAAA,EAAAD,CAAA,aAAAvD,CAAA,QAAA2H,UAAA,CAAA1E,MAAA,MAAAjD,CAAA,SAAAA,CAAA,QAAA6D,CAAA,QAAA8D,UAAA,CAAA3H,CAAA,OAAA6D,CAAA,CAAA0D,MAAA,SAAAsB,IAAA,IAAAlF,CAAA,CAAAwB,IAAA,CAAAtB,CAAA,wBAAAgF,IAAA,GAAAhF,CAAA,CAAA4D,UAAA,QAAA1D,CAAA,GAAAF,CAAA,aAAAE,CAAA,iBAAAP,CAAA,mBAAAA,CAAA,KAAAO,CAAA,CAAAwD,MAAA,IAAAhE,CAAA,IAAAA,CAAA,IAAAQ,CAAA,CAAA0D,UAAA,KAAA1D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAA+D,UAAA,cAAA7D,CAAA,CAAAgB,IAAA,GAAAzB,CAAA,EAAAS,CAAA,CAAAiB,GAAA,GAAA3B,CAAA,EAAAQ,CAAA,SAAA4C,MAAA,gBAAAS,IAAA,GAAArD,CAAA,CAAA0D,UAAA,EAAArG,CAAA,SAAA+H,QAAA,CAAAlF,CAAA,MAAAkF,QAAA,WAAAA,SAAA3F,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAAyB,IAAA,QAAAzB,CAAA,CAAA0B,GAAA,qBAAA1B,CAAA,CAAAyB,IAAA,mBAAAzB,CAAA,CAAAyB,IAAA,QAAAmC,IAAA,GAAA5D,CAAA,CAAA0B,GAAA,gBAAA1B,CAAA,CAAAyB,IAAA,SAAAgE,IAAA,QAAA/D,GAAA,GAAA1B,CAAA,CAAA0B,GAAA,OAAAyB,MAAA,kBAAAS,IAAA,yBAAA5D,CAAA,CAAAyB,IAAA,IAAA1B,CAAA,UAAA6D,IAAA,GAAA7D,CAAA,GAAAnC,CAAA,KAAAgI,MAAA,WAAAA,OAAA5F,CAAA,aAAAD,CAAA,QAAAoE,UAAA,CAAA1E,MAAA,MAAAM,CAAA,SAAAA,CAAA,QAAAvD,CAAA,QAAA2H,UAAA,CAAApE,CAAA,OAAAvD,CAAA,CAAAyH,UAAA,KAAAjE,CAAA,cAAA2F,QAAA,CAAAnJ,CAAA,CAAA8H,UAAA,EAAA9H,CAAA,CAAA0H,QAAA,GAAAG,aAAA,CAAA7H,CAAA,GAAAoB,CAAA,yBAAAiI,OAAA7F,CAAA,aAAAD,CAAA,QAAAoE,UAAA,CAAA1E,MAAA,MAAAM,CAAA,SAAAA,CAAA,QAAAvD,CAAA,QAAA2H,UAAA,CAAApE,CAAA,OAAAvD,CAAA,CAAAuH,MAAA,KAAA/D,CAAA,QAAAG,CAAA,GAAA3D,CAAA,CAAA8H,UAAA,kBAAAnE,CAAA,CAAAsB,IAAA,QAAApB,CAAA,GAAAF,CAAA,CAAAuB,GAAA,EAAA2C,aAAA,CAAA7H,CAAA,YAAA6D,CAAA,YAAA4C,KAAA,8BAAA6C,aAAA,WAAAA,cAAA/F,CAAA,EAAAvD,CAAA,EAAA2D,CAAA,gBAAAiD,QAAA,KAAA1C,QAAA,EAAA4B,MAAA,CAAAvC,CAAA,GAAA4D,UAAA,EAAAnH,CAAA,EAAAqH,OAAA,EAAA1D,CAAA,oBAAAgD,MAAA,UAAAzB,GAAA,GAAA1B,CAAA,GAAApC,CAAA,OAAAmC,CAAA;AAAA,SAAAgG,mBAAAC,GAAA,EAAAnD,OAAA,EAAAoD,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAA1E,GAAA,cAAA2E,IAAA,GAAAL,GAAA,CAAAI,GAAA,EAAA1E,GAAA,OAAArI,KAAA,GAAAgN,IAAA,CAAAhN,KAAA,WAAAiN,KAAA,IAAAL,MAAA,CAAAK,KAAA,iBAAAD,IAAA,CAAAnD,IAAA,IAAAL,OAAA,CAAAxJ,KAAA,YAAA4L,OAAA,CAAApC,OAAA,CAAAxJ,KAAA,EAAA0J,IAAA,CAAAmD,KAAA,EAAAC,MAAA;AAAA,SAAAI,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAA1B,OAAA,WAAApC,OAAA,EAAAoD,MAAA,QAAAD,GAAA,GAAAQ,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAR,MAAA7M,KAAA,IAAA0M,kBAAA,CAAAC,GAAA,EAAAnD,OAAA,EAAAoD,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAA9M,KAAA,cAAA8M,OAAAU,GAAA,IAAAd,kBAAA,CAAAC,GAAA,EAAAnD,OAAA,EAAAoD,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAU,GAAA,KAAAX,KAAA,CAAAY,SAAA;AAD6C;AACD;AAE5C,IAAIE,QAAQ,GAAG,KAAK;AACpB,IAAIC,SAAS,GAAG,IAAI;AACpB,IAAIC,YAAY,GAAG,IAAI;AAEvB,IAAMvO,QAAQ,GAAG;EACfoD,aAAa,EAAE,SAAAA,cAAUoL,MAAM,EAAE;IAC/BD,YAAY,GAAGC,MAAM;EACvB,CAAC;EAEDpN,KAAK,EAAE,SAAAA,MAAUqN,KAAK,EAAE;IACtBH,SAAS,GAAGG,KAAK;EACnB,CAAC;EAEDnM,KAAK;IAAA,IAAAoM,MAAA,GAAAd,iBAAA,eAAAzG,mBAAA,GAAA8E,IAAA,CAAE,SAAA0C,SAAA;MAAA,IAAAC,GAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,cAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,MAAA,EAAA7E,IAAA,EAAA8E,kBAAA,EAAA3O,KAAA,EAAA4O,UAAA,EAAAC,QAAA,EAAAC,cAAA;MAAA,OAAArI,mBAAA,GAAAqB,IAAA,UAAAiH,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAhD,IAAA,GAAAgD,SAAA,CAAAzE,IAAA;UAAA;YACC2D,GAAG,GAAGe,MAAM,CAACzP,QAAQ,CAACK,aAAa,CAAC,MAAM,CAAC,CAACG,KAAK,CAAC,GAAG,IAAI;YACzDmO,QAAQ,GAAG,YAAY;YACvBC,YAAY,GAAG,EAAE;YAAAY,SAAA,CAAAhD,IAAA;YA4BNqC,cAAc;cAAA,IAAAa,IAAA,GAAAhC,iBAAA,eAAAzG,mBAAA,GAAA8E,IAAA,CAA7B,SAAA4D,QAAA;gBAAA,IAAAC,YAAA,EAAAC,UAAA,EAAAC,iBAAA,EAAAC,eAAA,EAAAC,SAAA,EAAAC,WAAA,EAAA5M,cAAA;gBAAA,OAAA4D,mBAAA,GAAAqB,IAAA,UAAA4H,SAAAC,QAAA;kBAAA,kBAAAA,QAAA,CAAA3D,IAAA,GAAA2D,QAAA,CAAApF,IAAA;oBAAA;sBAAA,MACMsD,YAAY,KAAK,IAAI,IAAIiB,cAAc,IAAIjB,YAAY;wBAAA8B,QAAA,CAAApF,IAAA;wBAAA;sBAAA;sBACzDhK,OAAO,CAACC,GAAG,iEAAAC,MAAA,CAAeqO,cAAc,mGAAqB,CAAC;sBAAC,OAAAa,QAAA,CAAAvF,MAAA;oBAAA;sBAI3DgF,YAAY,gBAAA3O,MAAA,CAAamN,SAAS;sBAClCyB,UAAU,GAAGX,MAAM,CAACkB,OAAO,CAACR,YAAY,CAAC;sBAAA,MAE3CC,UAAU,KAAK,CAAC,CAAC;wBAAAM,QAAA,CAAApF,IAAA;wBAAA;sBAAA;sBACb+E,iBAAiB,GAAGZ,MAAM,CAACmB,WAAW,CAAC,GAAG,EAAER,UAAU,CAAC;sBACvDE,eAAe,GAAGb,MAAM,CAACkB,OAAO,CAAC,GAAG,EAAEP,UAAU,CAAC,GAAG,CAAC;sBAAA,MACvDC,iBAAiB,KAAK,CAAC,CAAC,IAAIC,eAAe,KAAK,CAAC,CAAC;wBAAAI,QAAA,CAAApF,IAAA;wBAAA;sBAAA;sBAC9CiF,SAAS,GAAGd,MAAM,CAACoB,SAAS,CAChCR,iBAAiB,EACjBC,eACF,CAAC;sBAEKE,WAAW,GAAGM,IAAI,CAACC,KAAK,CAACR,SAAS,CAAC;sBACzCpB,YAAY,CAACrD,IAAI,CAAC0E,WAAW,CAAC;sBAE9B7B,SAAS,EAAE;sBACXkB,cAAc,EAAE;sBAACa,QAAA,CAAApF,IAAA;sBAAA,OAEX,IAAIqB,OAAO,CAAC,UAACpC,OAAO;wBAAA,OAAKyG,UAAU,CAACzG,OAAO,EAAE0E,GAAG,CAAC;sBAAA,EAAC;oBAAA;sBAAA,KAEjDP,QAAQ;wBAAAgC,QAAA,CAAApF,IAAA;wBAAA;sBAAA;sBAAAoF,QAAA,CAAApF,IAAA;sBAAA,OACP,IAAIqB,OAAO,CAAC,UAACpC,OAAO;wBAAA,OAAKyG,UAAU,CAACzG,OAAO,EAAE,GAAG,CAAC;sBAAA,EAAC;oBAAA;sBAAAmG,QAAA,CAAApF,IAAA;sBAAA;oBAAA;sBAGpD1H,cAAc,GAAGqL,GAAG,GAAG,IAAI;sBACjCvL,8DAAS,CAACE,cAAc,EAAEA,cAAc,CAAC;sBAEzC1B,eAAe,CAACO,MAAM,CAAC,CAAC;sBACxBgM,4DAAY,CAAC8B,SAAS,CAAC;sBAACG,QAAA,CAAApF,IAAA;sBAAA,OAElB8D,cAAc,CAAC,CAAC;oBAAA;sBAAAsB,QAAA,CAAApF,IAAA;sBAAA;oBAAA;sBAEtBhK,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;oBAAC;sBAAAmP,QAAA,CAAApF,IAAA;sBAAA;oBAAA;sBAGrDhK,OAAO,CAACC,GAAG,SAAAC,MAAA,CAAQmN,SAAS,+IAA6B,CAAC;oBAAC;oBAAA;sBAAA,OAAA+B,QAAA,CAAAxD,IAAA;kBAAA;gBAAA,GAAAgD,OAAA;cAAA,CAE9D;cAAA,gBA3Ccd,cAAcA,CAAA;gBAAA,OAAAa,IAAA,CAAA3B,KAAA,OAAAD,SAAA;cAAA;YAAA;YAAA0B,SAAA,CAAAzE,IAAA;YAAA,OAzBN2F,KAAK,CAAC/B,QAAQ,CAAC;UAAA;YAAhCG,QAAQ,GAAAU,SAAA,CAAA/E,IAAA;YAAA,IAETqE,QAAQ,CAAC6B,EAAE;cAAAnB,SAAA,CAAAzE,IAAA;cAAA;YAAA;YAAA,MACR,IAAIX,KAAK,CAAC,2BAA2B,CAAC;UAAA;YAGxC2E,MAAM,GAAGD,QAAQ,CAAC8B,IAAI;YACtB5B,MAAM,GAAGD,MAAM,CAAC8B,SAAS,CAAC,CAAC;YAC3B5B,OAAO,GAAG,IAAI6B,WAAW,CAAC,CAAC;YAC7B5B,MAAM,GAAG,EAAE;YACX7E,IAAI,GAAG,KAAK;UAAA;YAAA,IAERA,IAAI;cAAAmF,SAAA,CAAAzE,IAAA;cAAA;YAAA;YAAAyE,SAAA,CAAAzE,IAAA;YAAA,OACgCiE,MAAM,CAAC+B,IAAI,CAAC,CAAC;UAAA;YAAA5B,kBAAA,GAAAK,SAAA,CAAA/E,IAAA;YAA/CjK,KAAK,GAAA2O,kBAAA,CAAL3O,KAAK;YAAQ4O,UAAU,GAAAD,kBAAA,CAAhB9E,IAAI;YACnB,IAAI7J,KAAK,EAAE;cACT0O,MAAM,IAAID,OAAO,CAAC+B,MAAM,CAACxQ,KAAK,EAAE;gBAAEuO,MAAM,EAAE,CAACK;cAAW,CAAC,CAAC;YAC1D;YACA/E,IAAI,GAAG+E,UAAU;YAACI,SAAA,CAAAzE,IAAA;YAAA;UAAA;YAGdsE,QAAQ,GAAGkB,IAAI,CAACC,KAAK,CAACtB,MAAM,CAAC;YACnCnO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEqO,QAAQ,CAAC;YAEtCC,cAAc,GAAG,CAAC;YAAAE,SAAA,CAAAzE,IAAA;YAAA,OA+ChB8D,cAAc,CAAC,CAAC;UAAA;YAAAW,SAAA,CAAAzE,IAAA;YAAA;UAAA;YAAAyE,SAAA,CAAAhD,IAAA;YAAAgD,SAAA,CAAAyB,EAAA,GAAAzB,SAAA;YAEtBzO,OAAO,CAAC0M,KAAK,CAAC,SAAS,EAAA+B,SAAA,CAAAyB,EAAO,CAAC;UAAC;UAAA;YAAA,OAAAzB,SAAA,CAAA7C,IAAA;QAAA;MAAA,GAAA8B,QAAA;IAAA,CAEnC;IAAA,SAAArM,MAAA;MAAA,OAAAoM,MAAA,CAAAT,KAAA,OAAAD,SAAA;IAAA;IAAA,OAAA1L,KAAA;EAAA;EAEDR,KAAK,EAAE,SAAAA,MAAA,EAAY;IACjBuM,QAAQ,GAAG,IAAI;EACjB,CAAC;EAEDtM,MAAM,EAAE,SAAAA,OAAA,EAAY;IAClB,IAAIsM,QAAQ,EAAE;MACZA,QAAQ,GAAG,KAAK;MAChBrO,QAAQ,CAAC+O,cAAc,CAAC,CAAC;IAC3B,CAAC,MAAM;MACL9N,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC9D;EACF;AACF,CAAC;AAED,iEAAelB,QAAQ,EAAC;;AAExqJAAAmH,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAvD,CAAA,GAAAyD,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAA3D,CAAA,CAAA4D,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAN,CAAA,EAAAD,CAAA,EAAAvD,CAAA,IAAAwD,CAAA,CAAAD,CAAA,IAAAvD,CAAA,CAAAnD,KAAA,KAAAkH,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAf,CAAA,EAAAD,CAAA,EAAAvD,CAAA,WAAAyD,MAAA,CAAAK,cAAA,CAAAN,CAAA,EAAAD,CAAA,IAAA1G,KAAA,EAAAmD,CAAA,EAAAwE,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAlB,CAAA,CAAAD,CAAA,WAAAgB,MAAA,mBAAAf,CAAA,IAAAe,MAAA,YAAAA,OAAAf,CAAA,EAAAD,CAAA,EAAAvD,CAAA,WAAAwD,CAAA,CAAAD,CAAA,IAAAvD,CAAA,gBAAA2E,KAAAnB,CAAA,EAAAD,CAAA,EAAAvD,CAAA,EAAA2D,CAAA,QAAAI,CAAA,GAAAR,CAAA,IAAAA,CAAA,CAAAG,SAAA,YAAAkB,SAAA,GAAArB,CAAA,GAAAqB,SAAA,EAAAX,CAAA,GAAAR,MAAA,CAAAoB,MAAA,CAAAd,CAAA,CAAAL,SAAA,GAAAS,CAAA,OAAAW,OAAA,CAAAnB,CAAA,gBAAAE,CAAA,CAAAI,CAAA,eAAApH,KAAA,EAAAkI,gBAAA,CAAAvB,CAAA,EAAAxD,CAAA,EAAAmE,CAAA,MAAAF,CAAA,aAAAe,SAAAxB,CAAA,EAAAD,CAAA,EAAAvD,CAAA,mBAAAiF,IAAA,YAAAC,GAAA,EAAA1B,CAAA,CAAA2B,IAAA,CAAA5B,CAAA,EAAAvD,CAAA,cAAAwD,CAAA,aAAAyB,IAAA,WAAAC,GAAA,EAAA1B,CAAA,QAAAD,CAAA,CAAAoB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAnE,CAAA,gBAAAwD,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAnB,MAAA,CAAAmB,CAAA,EAAAzB,CAAA,qCAAA0B,CAAA,GAAAlC,MAAA,CAAAmC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAA7F,CAAA,IAAA2D,CAAA,CAAAwB,IAAA,CAAAU,CAAA,EAAA5B,CAAA,MAAAyB,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAA/B,SAAA,GAAAkB,SAAA,CAAAlB,SAAA,GAAAD,MAAA,CAAAoB,MAAA,CAAAa,CAAA,YAAAM,sBAAAxC,CAAA,gCAAA5E,OAAA,WAAA2E,CAAA,IAAAgB,MAAA,CAAAf,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAAyC,OAAA,CAAA1C,CAAA,EAAAC,CAAA,sBAAA0C,cAAA1C,CAAA,EAAAD,CAAA,aAAA4C,OAAAnG,CAAA,EAAA6D,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAAxB,CAAA,CAAAxD,CAAA,GAAAwD,CAAA,EAAAK,CAAA,mBAAAM,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAxH,KAAA,SAAAuI,CAAA,gBAAAgB,OAAA,CAAAhB,CAAA,KAAAzB,CAAA,CAAAwB,IAAA,CAAAC,CAAA,eAAA7B,CAAA,CAAA8C,OAAA,CAAAjB,CAAA,CAAAkB,OAAA,EAAAC,IAAA,WAAA/C,CAAA,IAAA2C,MAAA,SAAA3C,CAAA,EAAAO,CAAA,EAAAE,CAAA,gBAAAT,CAAA,IAAA2C,MAAA,UAAA3C,CAAA,EAAAO,CAAA,EAAAE,CAAA,QAAAV,CAAA,CAAA8C,OAAA,CAAAjB,CAAA,EAAAmB,IAAA,WAAA/C,CAAA,IAAAa,CAAA,CAAAxH,KAAA,GAAA2G,CAAA,EAAAO,CAAA,CAAAM,CAAA,gBAAAb,CAAA,WAAA2C,MAAA,UAAA3C,CAAA,EAAAO,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAAlF,CAAA,EAAA6D,CAAA,oBAAAhH,KAAA,WAAAA,MAAA2G,CAAA,EAAAG,CAAA,aAAA6C,2BAAA,eAAAjD,CAAA,WAAAA,CAAA,EAAAvD,CAAA,IAAAmG,MAAA,CAAA3C,CAAA,EAAAG,CAAA,EAAAJ,CAAA,EAAAvD,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAuG,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAzB,iBAAAxB,CAAA,EAAAvD,CAAA,EAAA2D,CAAA,QAAAE,CAAA,GAAAuB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAJ,CAAA,KAAAyB,CAAA,QAAAmB,KAAA,sCAAA5C,CAAA,KAAA0B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAApH,KAAA,EAAA2G,CAAA,EAAAkD,IAAA,eAAA/C,CAAA,CAAAgD,MAAA,GAAA5C,CAAA,EAAAJ,CAAA,CAAAuB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAR,CAAA,CAAAiD,QAAA,MAAAzC,CAAA,QAAAE,CAAA,GAAAwC,mBAAA,CAAA1C,CAAA,EAAAR,CAAA,OAAAU,CAAA,QAAAA,CAAA,KAAAjD,CAAA,mBAAAiD,CAAA,qBAAAV,CAAA,CAAAgD,MAAA,EAAAhD,CAAA,CAAAmD,IAAA,GAAAnD,CAAA,CAAAoD,KAAA,GAAApD,CAAA,CAAAuB,GAAA,sBAAAvB,CAAA,CAAAgD,MAAA,QAAA9C,CAAA,KAAAuB,CAAA,QAAAvB,CAAA,GAAA0B,CAAA,EAAA5B,CAAA,CAAAuB,GAAA,EAAAvB,CAAA,CAAAqD,iBAAA,CAAArD,CAAA,CAAAuB,GAAA,uBAAAvB,CAAA,CAAAgD,MAAA,IAAAhD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAAuB,GAAA,GAAArB,CAAA,GAAAyB,CAAA,MAAAI,CAAA,GAAAV,QAAA,CAAAzB,CAAA,EAAAvD,CAAA,EAAA2D,CAAA,oBAAA+B,CAAA,CAAAT,IAAA,QAAApB,CAAA,GAAAF,CAAA,CAAA+C,IAAA,GAAAnB,CAAA,GAAAF,CAAA,EAAAK,CAAA,CAAAR,GAAA,KAAA9D,CAAA,qBAAAvE,KAAA,EAAA6I,CAAA,CAAAR,GAAA,EAAAwB,IAAA,EAAA/C,CAAA,CAAA+C,IAAA,kBAAAhB,CAAA,CAAAT,IAAA,KAAApB,CAAA,GAAA0B,CAAA,EAAA5B,CAAA,CAAAgD,MAAA,YAAAhD,CAAA,CAAAuB,GAAA,GAAAQ,CAAA,CAAAR,GAAA,mBAAA2B,oBAAAtD,CAAA,EAAAvD,CAAA,QAAA2D,CAAA,GAAA3D,CAAA,CAAA2G,MAAA,EAAA9C,CAAA,GAAAN,CAAA,CAAAW,QAAA,CAAAP,CAAA,OAAAE,CAAA,KAAAL,CAAA,SAAAxD,CAAA,CAAA4G,QAAA,qBAAAjD,CAAA,IAAAJ,CAAA,CAAAW,QAAA,eAAAlE,CAAA,CAAA2G,MAAA,aAAA3G,CAAA,CAAAkF,GAAA,GAAA1B,CAAA,EAAAqD,mBAAA,CAAAtD,CAAA,EAAAvD,CAAA,eAAAA,CAAA,CAAA2G,MAAA,kBAAAhD,CAAA,KAAA3D,CAAA,CAAA2G,MAAA,YAAA3G,CAAA,CAAAkF,GAAA,OAAAgC,SAAA,uCAAAvD,CAAA,iBAAAvC,CAAA,MAAA2C,CAAA,GAAAiB,QAAA,CAAAnB,CAAA,EAAAN,CAAA,CAAAW,QAAA,EAAAlE,CAAA,CAAAkF,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAAjF,CAAA,CAAA2G,MAAA,YAAA3G,CAAA,CAAAkF,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAAlF,CAAA,CAAA4G,QAAA,SAAAxF,CAAA,MAAA6C,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAAyC,IAAA,IAAA1G,CAAA,CAAAuD,CAAA,CAAA4D,UAAA,IAAAlD,CAAA,CAAApH,KAAA,EAAAmD,CAAA,CAAAoH,IAAA,GAAA7D,CAAA,CAAA8D,OAAA,eAAArH,CAAA,CAAA2G,MAAA,KAAA3G,CAAA,CAAA2G,MAAA,WAAA3G,CAAA,CAAAkF,GAAA,GAAA1B,CAAA,GAAAxD,CAAA,CAAA4G,QAAA,SAAAxF,CAAA,IAAA6C,CAAA,IAAAjE,CAAA,CAAA2G,MAAA,YAAA3G,CAAA,CAAAkF,GAAA,OAAAgC,SAAA,sCAAAlH,CAAA,CAAA4G,QAAA,SAAAxF,CAAA,cAAAkG,aAAA9D,CAAA,QAAAD,CAAA,KAAAgE,MAAA,EAAA/D,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAiE,QAAA,GAAAhE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAkE,UAAA,GAAAjE,CAAA,KAAAD,CAAA,CAAAmE,QAAA,GAAAlE,CAAA,WAAAmE,UAAA,CAAAC,IAAA,CAAArE,CAAA,cAAAsE,cAAArE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAAsE,UAAA,QAAAvE,CAAA,CAAA0B,IAAA,oBAAA1B,CAAA,CAAA2B,GAAA,EAAA1B,CAAA,CAAAsE,UAAA,GAAAvE,CAAA,aAAAuB,QAAAtB,CAAA,SAAAmE,UAAA,MAAAJ,MAAA,aAAA/D,CAAA,CAAA5E,OAAA,CAAA0I,YAAA,cAAAS,KAAA,iBAAAjC,OAAAvC,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAvD,CAAA,GAAAuD,CAAA,CAAAU,CAAA,OAAAjE,CAAA,SAAAA,CAAA,CAAAmF,IAAA,CAAA5B,CAAA,4BAAAA,CAAA,CAAA6D,IAAA,SAAA7D,CAAA,OAAAyE,KAAA,CAAAzE,CAAA,CAAAN,MAAA,SAAAY,CAAA,OAAAE,CAAA,YAAAqD,KAAA,aAAAvD,CAAA,GAAAN,CAAA,CAAAN,MAAA,OAAAU,CAAA,CAAAwB,IAAA,CAAA5B,CAAA,EAAAM,CAAA,UAAAuD,IAAA,CAAAvK,KAAA,GAAA0G,CAAA,CAAAM,CAAA,GAAAuD,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAvK,KAAA,GAAA2G,CAAA,EAAA4D,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAArD,CAAA,CAAAqD,IAAA,GAAArD,CAAA,gBAAAmD,SAAA,CAAAd,OAAA,CAAA7C,CAAA,kCAAAiC,iBAAA,CAAA9B,SAAA,GAAA+B,0BAAA,EAAA5B,CAAA,CAAAkC,CAAA,mBAAAlJ,KAAA,EAAA4I,0BAAA,EAAAhB,YAAA,SAAAZ,CAAA,CAAA4B,0BAAA,mBAAA5I,KAAA,EAAA2I,iBAAA,EAAAf,YAAA,SAAAe,iBAAA,CAAAyC,WAAA,GAAA1D,MAAA,CAAAkB,0BAAA,EAAApB,CAAA,wBAAAd,CAAA,CAAA2E,mBAAA,aAAA1E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAA2E,WAAA,WAAA5E,CAAA,KAAAA,CAAA,KAAAiC,iBAAA,6BAAAjC,CAAA,CAAA0E,WAAA,IAAA1E,CAAA,CAAAhB,IAAA,OAAAgB,CAAA,CAAA6E,IAAA,aAAA5E,CAAA,WAAAC,MAAA,CAAA4E,cAAA,GAAA5E,MAAA,CAAA4E,cAAA,CAAA7E,CAAA,EAAAiC,0BAAA,KAAAjC,CAAA,CAAA8E,SAAA,GAAA7C,0BAAA,EAAAlB,MAAA,CAAAf,CAAA,EAAAa,CAAA,yBAAAb,CAAA,CAAAE,SAAA,GAAAD,MAAA,CAAAoB,MAAA,CAAAkB,CAAA,GAAAvC,CAAA,KAAAD,CAAA,CAAAgF,KAAA,aAAA/E,CAAA,aAAA8C,OAAA,EAAA9C,CAAA,OAAAwC,qBAAA,CAAAE,aAAA,CAAAxC,SAAA,GAAAa,MAAA,CAAA2B,aAAA,CAAAxC,SAAA,EAAAS,CAAA,iCAAAZ,CAAA,CAAA2C,aAAA,GAAAA,aAAA,EAAA3C,CAAA,CAAAiF,KAAA,aAAAhF,CAAA,EAAAxD,CAAA,EAAA2D,CAAA,EAAAE,CAAA,EAAAE,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA0E,OAAA,OAAAxE,CAAA,OAAAiC,aAAA,CAAAvB,IAAA,CAAAnB,CAAA,EAAAxD,CAAA,EAAA2D,CAAA,EAAAE,CAAA,GAAAE,CAAA,UAAAR,CAAA,CAAA2E,mBAAA,CAAAlI,CAAA,IAAAiE,CAAA,GAAAA,CAAA,CAAAmD,IAAA,GAAAb,IAAA,WAAA/C,CAAA,WAAAA,CAAA,CAAAkD,IAAA,GAAAlD,CAAA,CAAA3G,KAAA,GAAAoH,CAAA,CAAAmD,IAAA,WAAApB,qBAAA,CAAAD,CAAA,GAAAxB,MAAA,CAAAwB,CAAA,EAAA1B,CAAA,gBAAAE,MAAA,CAAAwB,CAAA,EAAA9B,CAAA,iCAAAM,MAAA,CAAAwB,CAAA,6DAAAxC,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,QAAAD,CAAA,GAAAE,MAAA,CAAAD,CAAA,GAAAxD,CAAA,gBAAA2D,CAAA,IAAAJ,CAAA,EAAAvD,CAAA,CAAA4H,IAAA,CAAAjE,CAAA,UAAA3D,CAAA,CAAA2I,OAAA,aAAAvB,KAAA,WAAApH,CAAA,CAAAiD,MAAA,SAAAO,CAAA,GAAAxD,CAAA,CAAA4I,GAAA,QAAApF,CAAA,IAAAD,CAAA,SAAA6D,IAAA,CAAAvK,KAAA,GAAA2G,CAAA,EAAA4D,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAA7D,CAAA,CAAAuC,MAAA,GAAAA,MAAA,EAAAhB,OAAA,CAAApB,SAAA,KAAAyE,WAAA,EAAArD,OAAA,EAAAiD,KAAA,WAAAA,MAAAxE,CAAA,aAAAsF,IAAA,WAAAzB,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAAvD,CAAA,OAAAkD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAAzB,GAAA,GAAA1B,CAAA,OAAAmE,UAAA,CAAA/I,OAAA,CAAAiJ,aAAA,IAAAtE,CAAA,WAAAvD,CAAA,kBAAAA,CAAA,CAAA8I,MAAA,OAAAnF,CAAA,CAAAwB,IAAA,OAAAnF,CAAA,MAAAgI,KAAA,EAAAhI,CAAA,CAAA+I,KAAA,cAAA/I,CAAA,IAAAwD,CAAA,MAAAwF,IAAA,WAAAA,KAAA,SAAAtC,IAAA,WAAAlD,CAAA,QAAAmE,UAAA,IAAAG,UAAA,kBAAAtE,CAAA,CAAAyB,IAAA,QAAAzB,CAAA,CAAA0B,GAAA,cAAA+D,IAAA,KAAAjC,iBAAA,WAAAA,kBAAAzD,CAAA,aAAAmD,IAAA,QAAAnD,CAAA,MAAAvD,CAAA,kBAAAkJ,OAAAvF,CAAA,EAAAE,CAAA,WAAAI,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA3B,CAAA,EAAAvD,CAAA,CAAAoH,IAAA,GAAAzD,CAAA,EAAAE,CAAA,KAAA7D,CAAA,CAAA2G,MAAA,WAAA3G,CAAA,CAAAkF,GAAA,GAAA1B,CAAA,KAAAK,CAAA,aAAAA,CAAA,QAAA8D,UAAA,CAAA1E,MAAA,MAAAY,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAA4D,UAAA,CAAA9D,CAAA,GAAAI,CAAA,GAAAF,CAAA,CAAA+D,UAAA,iBAAA/D,CAAA,CAAAwD,MAAA,SAAA2B,MAAA,aAAAnF,CAAA,CAAAwD,MAAA,SAAAsB,IAAA,QAAA1E,CAAA,GAAAR,CAAA,CAAAwB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAV,CAAA,CAAAwB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAAwE,IAAA,GAAA9E,CAAA,CAAAyD,QAAA,SAAA0B,MAAA,CAAAnF,CAAA,CAAAyD,QAAA,gBAAAqB,IAAA,GAAA9E,CAAA,CAAA0D,UAAA,SAAAyB,MAAA,CAAAnF,CAAA,CAAA0D,UAAA,cAAAtD,CAAA,aAAA0E,IAAA,GAAA9E,CAAA,CAAAyD,QAAA,SAAA0B,MAAA,CAAAnF,CAAA,CAAAyD,QAAA,qBAAAnD,CAAA,QAAAoC,KAAA,qDAAAoC,IAAA,GAAA9E,CAAA,CAAA0D,UAAA,SAAAyB,MAAA,CAAAnF,CAAA,CAAA0D,UAAA,YAAAR,MAAA,WAAAA,OAAAzD,CAAA,EAAAD,CAAA,aAAAvD,CAAA,QAAA2H,UAAA,CAAA1E,MAAA,MAAAjD,CAAA,SAAAA,CAAA,QAAA6D,CAAA,QAAA8D,UAAA,CAAA3H,CAAA,OAAA6D,CAAA,CAAA0D,MAAA,SAAAsB,IAAA,IAAAlF,CAAA,CAAAwB,IAAA,CAAAtB,CAAA,wBAAAgF,IAAA,GAAAhF,CAAA,CAAA4D,UAAA,QAAA1D,CAAA,GAAAF,CAAA,aAAAE,CAAA,iBAAAP,CAAA,mBAAAA,CAAA,KAAAO,CAAA,CAAAwD,MAAA,IAAAhE,CAAA,IAAAA,CAAA,IAAAQ,CAAA,CAAA0D,UAAA,KAAA1D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAA+D,UAAA,cAAA7D,CAAA,CAAAgB,IAAA,GAAAzB,CAAA,EAAAS,CAAA,CAAAiB,GAAA,GAAA3B,CAAA,EAAAQ,CAAA,SAAA4C,MAAA,gBAAAS,IAAA,GAAArD,CAAA,CAAA0D,UAAA,EAAArG,CAAA,SAAA+H,QAAA,CAAAlF,CAAA,MAAAkF,QAAA,WAAAA,SAAA3F,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAAyB,IAAA,QAAAzB,CAAA,CAAA0B,GAAA,qBAAA1B,CAAA,CAAAyB,IAAA,mBAAAzB,CAAA,CAAAyB,IAAA,QAAAmC,IAAA,GAAA5D,CAAA,CAAA0B,GAAA,gBAAA1B,CAAA,CAAAyB,IAAA,SAAAgE,IAAA,QAAA/D,GAAA,GAAA1B,CAAA,CAAA0B,GAAA,OAAAyB,MAAA,kBAAAS,IAAA,yBAAA5D,CAAA,CAAAyB,IAAA,IAAA1B,CAAA,UAAA6D,IAAA,GAAA7D,CAAA,GAAAnC,CAAA,KAAAgI,MAAA,WAAAA,OAAA5F,CAAA,aAAAD,CAAA,QAAAoE,UAAA,CAAA1E,MAAA,MAAAM,CAAA,SAAAA,CAAA,QAAAvD,CAAA,QAAA2H,UAAA,CAAApE,CAAA,OAAAvD,CAAA,CAAAyH,UAAA,KAAAjE,CAAA,cAAA2F,QAAA,CAAAnJ,CAAA,CAAA8H,UAAA,EAAA9H,CAAA,CAAA0H,QAAA,GAAAG,aAAA,CAAA7H,CAAA,GAAAoB,CAAA,yBAAAiI,OAAA7F,CAAA,aAAAD,CAAA,QAAAoE,UAAA,CAAA1E,MAAA,MAAAM,CAAA,SAAAA,CAAA,QAAAvD,CAAA,QAAA2H,UAAA,CAAApE,CAAA,OAAAvD,CAAA,CAAAuH,MAAA,KAAA/D,CAAA,QAAAG,CAAA,GAAA3D,CAAA,CAAA8H,UAAA,kBAAAnE,CAAA,CAAAsB,IAAA,QAAApB,CAAA,GAAAF,CAAA,CAAAuB,GAAA,EAAA2C,aAAA,CAAA7H,CAAA,YAAA6D,CAAA,YAAA4C,KAAA,8BAAA6C,aAAA,WAAAA,cAAA/F,CAAA,EAAAvD,CAAA,EAAA2D,CAAA,gBAAAiD,QAAA,KAAA1C,QAAA,EAAA4B,MAAA,CAAAvC,CAAA,GAAA4D,UAAA,EAAAnH,CAAA,EAAAqH,OAAA,EAAA1D,CAAA,oBAAAgD,MAAA,UAAAzB,GAAA,GAAA1B,CAAA,GAAApC,CAAA,OAAAmC,CAAA;AAAA,SAAAgG,mBAAAC,GAAA,EAAAnD,OAAA,EAAAoD,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAA1E,GAAA,cAAA2E,IAAA,GAAAL,GAAA,CAAAI,GAAA,EAAA1E,GAAA,OAAArI,KAAA,GAAAgN,IAAA,CAAAhN,KAAA,WAAAiN,KAAA,IAAAL,MAAA,CAAAK,KAAA,iBAAAD,IAAA,CAAAnD,IAAA,IAAAL,OAAA,CAAAxJ,KAAA,YAAA4L,OAAA,CAAApC,OAAA,CAAAxJ,KAAA,EAAA0J,IAAA,CAAAmD,KAAA,EAAAC,MAAA;AAAA,SAAAI,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAA1B,OAAA,WAAApC,OAAA,EAAAoD,MAAA,QAAAD,GAAA,GAAAQ,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAR,MAAA7M,KAAA,IAAA0M,kBAAA,CAAAC,GAAA,EAAAnD,OAAA,EAAAoD,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAA9M,KAAA,cAAA8M,OAAAU,GAAA,IAAAd,kBAAA,CAAAC,GAAA,EAAAnD,OAAA,EAAAoD,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAU,GAAA,KAAAX,KAAA,CAAAY,SAAA;AADiE;AACI;AAC3B;AAE1C,IAAIzH,IAAI;AAAC,SAEM0H,YAAYA,CAAAgD,EAAA;EAAA,OAAAC,aAAA,CAAApD,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAAqD,cAAA;EAAAA,aAAA,GAAAzD,iBAAA,eAAAzG,mBAAA,GAAA8E,IAAA,CAA3B,SAAA4D,QAA4BK,SAAS;IAAA,IAAAjO,cAAA,EAAAqP,UAAA,EAAA3P,EAAA,EAAAyE,IAAA,EAAAmL,KAAA,EAAAC,SAAA;IAAA,OAAArK,mBAAA,GAAAqB,IAAA,UAAA4H,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAA3D,IAAA,GAAA2D,QAAA,CAAApF,IAAA;QAAA;UAC7BhJ,cAAc,GAAGM,8EAAiB,CAAC,CAAC,EAC1C;UAEM+O,UAAU,GAAGb,IAAI,CAACC,KAAK,CAACR,SAAS,CAAC;UAChCvO,EAAE,GAAkB2P,UAAU,CAA9B3P,EAAE,EAAEyE,IAAI,GAAYkL,UAAU,CAA1BlL,IAAI,EAAEmL,KAAK,GAAKD,UAAU,CAApBC,KAAK;UAEvB,IACEtP,cAAc,KAAK,MAAM,IACxBA,cAAc,KAAK,MAAM,IAAIX,8EAAc,KAAK,cAAe,EAChE;YACAoF,IAAI,MAAAvF,MAAA,CAAMiF,IAAI,CAAE;YAChBnF,OAAO,CAACC,GAAG,IAAAC,MAAA,CAAIQ,EAAE,SAAAR,MAAA,CAAMuF,IAAI,CAAE,CAAC;UAChC;UAEA,IACEzE,cAAc,KAAK,MAAM,IACxBA,cAAc,KAAK,MAAM,IAAIX,8EAAc,KAAK,cAAe,EAChE;YACAoF,IAAI,MAAAvF,MAAA,CAAMoQ,KAAK,CAAE;YACjBtQ,OAAO,CAACC,GAAG,IAAAC,MAAA,CAAIQ,EAAE,SAAAR,MAAA,CAAMuF,IAAI,CAAE,CAAC;UAChC;UAEAxG,QAAQ,CAACuD,cAAc,CAAC,OAAO,CAAC,CAAC/C,KAAK,MAAAS,MAAA,CAAMQ,EAAE,SAAAR,MAAA,CAAMiF,IAAI,CAAE;UAC1DlG,QAAQ,CAACuD,cAAc,CAAC,OAAO,CAAC,CAAC/C,KAAK,MAAAS,MAAA,CAAMQ,EAAE,SAAAR,MAAA,CAAMoQ,KAAK,CAAE;UAC3DrR,QAAQ,CAACU,MAAM,SAAAO,MAAA,CAASQ,EAAE,aAAU;;UAEpC;UACM6P,SAAS,GAAGhL,wDAAS,CAACC,YAAY,CAACC,IAAI,CAAC;UAC9C7E,eAAe,CAAC4P,KAAK,CAACD,SAAS,CAAC;QAAC;QAAA;UAAA,OAAAnB,QAAA,CAAAxD,IAAA;MAAA;IAAA,GAAAgD,OAAA;EAAA,CAClC;EAAA,OAAAwB,aAAA,CAAApD,KAAA,OAAAD,SAAA;AAAA;AAED,iEAAeI,YAAY;;;;;;UCtC3B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACN2D;AACgB;AACc;AACtC;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gEAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2EAAuB;AACzB,CAAC;AACD;AACA,EAAE,2EAAuB;AACzB,CAAC;AACD;AACA,EAAE,kFAA8B;AAChC,CAAC;AACD;AACA,EAAE,kFAA8B;AAChC,CAAC;AACD;AACA,uEAAe","sources":["webpack://dictatingenglishspeaker123.loc/./js/modules/IdDataControl.js","webpack://dictatingenglishspeaker123.loc/./js/modules/buttonsClickHandlerPauseResume.js","webpack://dictatingenglishspeaker123.loc/./js/modules/buttonsClickHandlerPlay.js","webpack://dictatingenglishspeaker123.loc/./js/modules/controlCheckBox.js","webpack://dictatingenglishspeaker123.loc/./js/modules/countNwords.js","webpack://dictatingenglishspeaker123.loc/./js/modules/countdownTimer.js","webpack://dictatingenglishspeaker123.loc/./js/modules/getUtterance.js","webpack://dictatingenglishspeaker123.loc/./js/modules/myModule.js","webpack://dictatingenglishspeaker123.loc/./js/modules/processLines.js","webpack://dictatingenglishspeaker123.loc/webpack/bootstrap","webpack://dictatingenglishspeaker123.loc/webpack/runtime/define property getters","webpack://dictatingenglishspeaker123.loc/webpack/runtime/hasOwnProperty shorthand","webpack://dictatingenglishspeaker123.loc/webpack/runtime/make namespace object","webpack://dictatingenglishspeaker123.loc/./js/script.mjs"],"sourcesContent":["import myModule from \"./myModule.js\";\r\n\r\nconst inputElements = document.querySelectorAll(\".form-point\");\r\n\r\nlet idFrom;\r\n\r\nexport function activCheckBox() {\r\n  const option1Checked = document.querySelector(\r\n    'input[name=\"option1\"]'\r\n  ).checked;\r\n  const option2Checked = document.querySelector(\r\n    'input[name=\"option2\"]'\r\n  ).checked;\r\n\r\n  if (option1Checked) {\r\n    idFrom = inputElements[0].value;\r\n    // console.log(`Проверка чекбоксов 1: ${idFrom}`);\r\n  } else if (option2Checked) {\r\n    const cookieId = document.cookie\r\n      .split(\"; \")\r\n      .find((row) => row.startsWith(\"id=\"));\r\n\r\n    if (cookieId) {\r\n      idFrom = cookieId.split(\"=\")[1];\r\n      console.log(`Проверка чекбоксов 2: ${idFrom}`);\r\n    } else {\r\n      console.log(\"id в cookie не найден.\");\r\n    }\r\n  } else {\r\n    console.log(\"Чекбоксы не выделены. Отметьте нужное действие!\");\r\n  }\r\n\r\n  if (idFrom) {\r\n    myModule.setID(idFrom);\r\n  }\r\n}\r\n\r\n// Экспортируем переменную через функцию, чтобы её значение было актуальным\r\nexport function getIdFrom() {\r\n  return idFrom;\r\n}\r\n\r\nexport default { activCheckBox, getIdFrom };\r\n","import myModule from \"./myModule.js\";\r\n\r\nlet currentButton2;\r\n\r\nconst buttonsClickHandlerPauseResume = {\r\n  handleClick2: function (event) {\r\n    const target = event.target;\r\n    currentButton2 = target.id;\r\n\r\n    switch (target.className) {\r\n      case \"pause\":\r\n        console.log(\"Pause button clicked\");\r\n        speechSynthesis.pause();\r\n        myModule.pause();\r\n        break;\r\n      case \"resume\":\r\n        console.log(\"Resume button clicked\");\r\n        speechSynthesis.resume();\r\n        myModule.resume();\r\n        break;\r\n      default:\r\n        console.log(`Unhandled class: ${target.className}`);\r\n    }\r\n  },\r\n};\r\n\r\nexport { currentButton2 };\r\nexport default buttonsClickHandlerPauseResume;\r\n","import { activCheckBox } from \"./IdDataControl.js\";\r\nimport myModule from \"./myModule.js\";\r\nimport countNwords from \"./countNwords.js\";\r\n\r\nlet currentButton1;\r\n\r\nconst buttonsClickHandlerPlay = {\r\n  handleClick1: function (event) {\r\n    const target = event.target;\r\n    currentButton1 = target.id;\r\n\r\n    switch (target.className) {\r\n      case \"play\":\r\n        console.log(\"Play button clicked\");\r\n        speechSynthesis.cancel();\r\n        activCheckBox();\r\n        countNwords.nWord();\r\n        myModule.words();\r\n        // console.log(currentButton1);\r\n        break;\r\n      default:\r\n        console.log(`Unhandled class: ${target.className}`);\r\n    }\r\n  },\r\n};\r\n\r\nconst getCurrentButton1 = () => currentButton1;\r\n\r\nexport { getCurrentButton1 };\r\nexport default buttonsClickHandlerPlay;\r\n","const controlCheckBox = () => {\r\n  // Обработка изменения состояния чекбоксов\r\n  document.querySelectorAll(\".checkbox\").forEach((checkbox) => {\r\n    checkbox.addEventListener(\"change\", function () {\r\n      if (this.checked) {\r\n        // Если текущий чекбокс выбран, отключаем остальные чекбоксы\r\n        document.querySelectorAll(\".checkbox\").forEach((box) => {\r\n          if (box !== this) {\r\n            box.disabled = true;\r\n          }\r\n        });\r\n      } else {\r\n        // Если текущий чекбокс не выбран, включаем все чекбоксы\r\n        document.querySelectorAll(\".checkbox\").forEach((box) => {\r\n          box.disabled = false;\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // Проверка состояния чекбоксов при загрузке страницы\r\n  window.addEventListener(\"load\", function () {\r\n    const firstCheckbox = document.querySelector('.checkbox[name=\"option1\"]');\r\n    if (firstCheckbox && firstCheckbox.checked) {\r\n      // Если первый чекбокс выбран, отключаем остальные чекбоксы\r\n      document.querySelectorAll(\".checkbox\").forEach((box) => {\r\n        if (box !== firstCheckbox) {\r\n          box.disabled = true;\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport default controlCheckBox;\r\n","import myModule from \"./myModule.js\";\r\n\r\nconst countNwords = {\r\n  nWord: function () {\r\n    const countNWordVolue = document.querySelector(\".form-pointN\").value;\r\n    const optionCheckedNWord = document.querySelector(\r\n      'input[name=\"option3\"]'\r\n    ).checked;\r\n\r\n    if (!optionCheckedNWord && !countNWordVolue) {\r\n      alert(\r\n        \"Отметьте пожалуйста чекбокс, и поставьте нужное колличество слов!\"\r\n      );\r\n    }\r\n\r\n    // console.log(`Проверка чек бокс 3 ${countNWordVolue}`);\r\n    myModule.useCountNWord(countNWordVolue);\r\n  },\r\n};\r\n\r\nexport default countNwords;\r\n","const countdown = (seconds, initialSeconds) => {\r\n  const countdownElement = document.getElementById(\"countdown\");\r\n  const circle = document.querySelector(\".progress-ring__circle\");\r\n  const endDot = document.querySelector(\".progress-ring__dot\"); // Новый элемент для точки\r\n  const radius = circle.r.baseVal.value;\r\n  const circumference = 2 * Math.PI * radius;\r\n\r\n  circle.style.strokeDasharray = `${circumference} ${circumference}`;\r\n  circle.style.strokeDashoffset = circumference;\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${String(minutes).padStart(2, \"0\")}:${String(\r\n      remainingSeconds\r\n    ).padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const setProgress = (percent) => {\r\n    const offset = circumference - (percent / 100) * circumference;\r\n    circle.style.strokeDashoffset = offset;\r\n\r\n    const angle = ((360 * percent) / 100) * (Math.PI / 180); // Угол в радианах\r\n    const x = 60 + radius * Math.cos(angle - Math.PI / 2); // Вычисляем x-координату точки\r\n    const y = 60 + radius * Math.sin(angle - Math.PI / 2); // Вычисляем y-координату точки\r\n    endDot.setAttribute(\"cx\", x);\r\n    endDot.setAttribute(\"cy\", y);\r\n  };\r\n\r\n  const timer = setInterval(() => {\r\n    countdownElement.textContent = formatTime(seconds);\r\n    const progress = (seconds / initialSeconds) * 100;\r\n    setProgress(progress);\r\n\r\n    if (seconds <= 0) {\r\n      clearInterval(timer);\r\n      countdownElement.textContent = \"Время истекло!\";\r\n    }\r\n    seconds--;\r\n  }, 1000);\r\n};\r\n\r\nexport default countdown;\r\n","const voiceList = document.querySelector(\"#voiceSelect\");\r\nconst synth = speechSynthesis;\r\n\r\nexport function voices() {\r\n  voiceList.innerHTML = \"\";\r\n  let availableVoices = synth.getVoices();\r\n  let defaultVoice = getDefaultVoice(availableVoices);\r\n\r\n  availableVoices.forEach((voice) => {\r\n    let selected = voice === defaultVoice ? \"selected\" : \"\";\r\n\r\n    let option = `<option value=\"${voice.name}\" ${selected}>${voice.name} (${voice.lang})</option>`;\r\n\r\n    voiceList.insertAdjacentHTML(\"beforeend\", option);\r\n  });\r\n}\r\n\r\nsynth.onvoiceschanged = voices;\r\n\r\nfunction getDefaultVoice(voices) {\r\n  return voices.find(\r\n    (voice) => voice.lang === \"en-US\" || voice.lang === \"en-GB\"\r\n  );\r\n}\r\n\r\nconst voicePlay = {\r\n  getUtterance: function (text) {\r\n    const rate = document.getElementById(\"speed\").value;\r\n    const pitch = document.getElementById(\"pitch\").value;\r\n\r\n    const availableVoices = speechSynthesis.getVoices();\r\n    const selectedVoiceName = voiceList.value;\r\n\r\n    if (availableVoices.length > 0) {\r\n      const selectedVoice = availableVoices.find(\r\n        (voice) => voice.name === selectedVoiceName\r\n      );\r\n\r\n      const U = new SpeechSynthesisUtterance(text);\r\n      U.voice = selectedVoice;\r\n      U.lang = selectedVoice.lang;\r\n      U.volume = 1;\r\n      U.rate = rate;\r\n      U.pitch = pitch;\r\n\r\n      return U;\r\n    } else {\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nexport default voicePlay;\r\n","import processLines from \"./processLines.js\";\r\nimport countdown from \"./countdownTimer.js\";\r\n\r\nlet isPaused = false;\r\nlet currentID = null;\r\nlet count_n_Word = null;\r\n\r\nconst myModule = {\r\n  useCountNWord: function (n_Word) {\r\n    count_n_Word = n_Word;\r\n  },\r\n\r\n  setID: function (newID) {\r\n    currentID = newID;\r\n  },\r\n\r\n  words: async function () {\r\n    const sec = Number(document.querySelector(\"#gap\").value) * 1000;\r\n    const filePath = \"../db.json\";\r\n    const foundObjects = [];\r\n\r\n    try {\r\n      const response = await fetch(filePath);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Ошибка при загрузке файла\");\r\n      }\r\n\r\n      const stream = response.body;\r\n      const reader = stream.getReader();\r\n      const decoder = new TextDecoder();\r\n      let result = \"\";\r\n      let done = false;\r\n\r\n      while (!done) {\r\n        const { value, done: streamDone } = await reader.read();\r\n        if (value) {\r\n          result += decoder.decode(value, { stream: !streamDone });\r\n        }\r\n        done = streamDone;\r\n      }\r\n\r\n      const jsonData = JSON.parse(result);\r\n      console.log(\"Данные распарсены\", jsonData);\r\n\r\n      let processedCount = 0;\r\n\r\n      async function readNextString() {\r\n        if (count_n_Word !== null && processedCount >= count_n_Word) {\r\n          console.log(`Обработано ${processedCount} строк. Завершение.`);\r\n          return;\r\n        }\r\n\r\n        const searchString = `\"id\": \"${currentID}\"`;\r\n        const startIndex = result.indexOf(searchString);\r\n\r\n        if (startIndex !== -1) {\r\n          const startBracketIndex = result.lastIndexOf(\"{\", startIndex);\r\n          const endBracketIndex = result.indexOf(\"}\", startIndex) + 1;\r\n          if (startBracketIndex !== -1 && endBracketIndex !== -1) {\r\n            const dataChunk = result.substring(\r\n              startBracketIndex,\r\n              endBracketIndex\r\n            );\r\n\r\n            const foundObject = JSON.parse(dataChunk);\r\n            foundObjects.push(foundObject);\r\n\r\n            currentID++;\r\n            processedCount++;\r\n\r\n            await new Promise((resolve) => setTimeout(resolve, sec));\r\n\r\n            while (isPaused) {\r\n              await new Promise((resolve) => setTimeout(resolve, 100));\r\n            }\r\n\r\n            const initialSeconds = sec / 1000;\r\n            countdown(initialSeconds, initialSeconds);\r\n\r\n            speechSynthesis.cancel();\r\n            processLines(dataChunk);\r\n\r\n            await readNextString();\r\n          } else {\r\n            console.log(\"Начало или конец строки не найдены.\");\r\n          }\r\n        } else {\r\n          console.log(`ID \"${currentID}\" Працесс закончен.Спасибо!`);\r\n        }\r\n      }\r\n\r\n      await readNextString();\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n    }\r\n  },\r\n\r\n  pause: function () {\r\n    isPaused = true;\r\n  },\r\n\r\n  resume: function () {\r\n    if (isPaused) {\r\n      isPaused = false;\r\n      myModule.readNextString();\r\n    } else {\r\n      console.log(\"Speech synthesis is not paused, cannot resume\");\r\n    }\r\n  },\r\n};\r\n\r\nexport default myModule;\r\n\r\n// import processLines from \"./processLines.js\";\r\n// import countdown from \"./countdownTimer.js\";\r\n\r\n// let isPaused = false;\r\n// let currentID = null;\r\n// let count_n_Word = null;\r\n\r\n// const myModule = {\r\n//   useCountNWord: function (n_Word) {\r\n//     // console.log(\r\n//     //   `Проверка чекбоксов кол-ва слов: \"Чек-бокс отмечен\", кол. слов - ${n_Word}`\r\n//     // );\r\n//     count_n_Word = n_Word;\r\n//   },\r\n\r\n//   setID: function (newID) {\r\n//     currentID = newID;\r\n//   },\r\n\r\n//   words: async function () {\r\n//     const sec = Number(document.querySelector(\"#gap\").value) * 1000;\r\n//     // console.log(`sec: ${sec}`);\r\n//     // 1. Указываем путь к файлу\r\n//     const filePath = \"../db.json\";\r\n//     const foundObjects = [];\r\n\r\n//     try {\r\n//       // 2. Запрос данных через fetch API\r\n//       const response = await fetch(filePath);\r\n\r\n//       // 3. Обрабатываем ошибку соединени\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Ошибка при загрузке файла\");\r\n//       }\r\n\r\n//       // 4. Получаем поток данных из тела ответа\r\n//       const stream = response.body;\r\n\r\n//       // 5. Создаем объект ReadableStreamDefaultReader для чтения потока\r\n//       const reader = stream.getReader();\r\n\r\n//       // 6. Распарсиваем поток\r\n//       const decoder = new TextDecoder();\r\n//       let result = \"\";\r\n//       let done = false;\r\n\r\n//       while (!done) {\r\n//         const { value, done: streamDone } = await reader.read();\r\n//         if (value) {\r\n//           result += decoder.decode(value, { stream: !streamDone });\r\n//         }\r\n//         done = streamDone;\r\n//       }\r\n\r\n//       const jsonData = JSON.parse(result);\r\n//       console.log(\"Данные распарсены\", jsonData);\r\n\r\n//       // 7.Функция для чтения следующей строки с задержкой\r\n//       async function readNextString() {\r\n//         // Начинаем читать поток с указанного ID\r\n//         const searchString = `\"id\": \"${currentID}\"`;\r\n//         const startIndex = result.indexOf(searchString);\r\n\r\n//         if (startIndex !== -1) {\r\n//           const startBracketIndex = result.lastIndexOf(\"{\", startIndex);\r\n//           const endBracketIndex = result.indexOf(\"}\", startIndex) + 1;\r\n//           if (startBracketIndex !== -1 && endBracketIndex !== -1) {\r\n//             const dataChunk = result.substring(\r\n//               startBracketIndex,\r\n//               endBracketIndex\r\n//             );\r\n//             // console.log(\"Прочитанная строка:\", dataChunk);\r\n\r\n//             // Добавляем объект в массив найденных объектов\r\n//             const foundObject = JSON.parse(dataChunk);\r\n//             foundObjects.push(foundObject);\r\n\r\n//             currentID++;\r\n\r\n//             await new Promise((resolve) => setTimeout(resolve, sec));\r\n\r\n//             while (isPaused) {\r\n//               await new Promise((resolve) => setTimeout(resolve, 100));\r\n//             }\r\n\r\n//             const initialSeconds = sec / 1000;\r\n//             countdown(initialSeconds, initialSeconds);\r\n\r\n//             // Вызов processLines с переданными данными\r\n//             speechSynthesis.cancel();\r\n//             processLines(dataChunk);\r\n\r\n//             await readNextString();\r\n//           } else {\r\n//             console.log(\"Начало или конец строки не найдены.\");\r\n//           }\r\n//         } else {\r\n//           console.log(`ID \"${currentID}\" Працесс закончен.Спасибо!`);\r\n//         }\r\n//       }\r\n\r\n//       await readNextString();\r\n//     } catch (error) {\r\n//       console.error(\"Ошибка:\", error);\r\n//     }\r\n//   },\r\n//   pause: function () {\r\n//     isPaused = true;\r\n//     // console.log(`Paused ${isPaused}`);\r\n//   },\r\n//   resume: function () {\r\n//     // console.log(`Paused ${isPaused}`);\r\n//     if (isPaused) {\r\n//       isPaused = false;\r\n\r\n//       myModule.readNextString();\r\n//     } else {\r\n//       console.log(\"Speech synthesis is not paused, cannot resume\");\r\n//     }\r\n//   },\r\n// };\r\n\r\n// export default myModule;\r\n","import { getCurrentButton1 } from \"./buttonsClickHandlerPlay.js\";\r\nimport { currentButton2 } from \"./buttonsClickHandlerPauseResume.js\";\r\nimport voicePlay from \"./getUtterance.js\";\r\n\r\nlet text;\r\n\r\nasync function processLines(dataChunk) {\r\n  const currentButton1 = getCurrentButton1();\r\n  // console.log(`11111 ${currentButton1} ${currentButton2}`);\r\n\r\n  const parsedData = JSON.parse(dataChunk);\r\n  const { id, name, title } = parsedData;\r\n\r\n  if (\r\n    currentButton1 === \"but1\" ||\r\n    (currentButton1 === \"but1\" && currentButton2 === \"resumeButton\")\r\n  ) {\r\n    text = `${name}`;\r\n    console.log(`${id} - ${text}`);\r\n  }\r\n\r\n  if (\r\n    currentButton1 === \"but2\" ||\r\n    (currentButton1 === \"but2\" && currentButton2 === \"resumeButton\")\r\n  ) {\r\n    text = `${title}`;\r\n    console.log(`${id} - ${text}`);\r\n  }\r\n\r\n  document.getElementById(\"text1\").value = `${id} - ${name}`;\r\n  document.getElementById(\"text2\").value = `${id} - ${title}`;\r\n  document.cookie = `id=${id}; path=/`;\r\n\r\n  // Вызов voicePlay.getUtterance для воспроизведения текста\r\n  const utterance = voicePlay.getUtterance(text);\r\n  speechSynthesis.speak(utterance);\r\n}\r\n\r\nexport default processLines;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import controlCheckBox from \"./modules/controlCheckBox.js\";\r\nimport buttonsClickHandlerPlay from \"./modules/buttonsClickHandlerPlay.js\";\r\nimport buttonsClickHandlerPauseResume from \"./modules/buttonsClickHandlerPauseResume.js\";\r\nimport { voices } from \"./modules/getUtterance.js\";\r\n\r\ndocument.addEventListener(\"keydown\", function (event) {\r\n  if (event.key === \"Enter\") {\r\n    event.preventDefault();\r\n  }\r\n});\r\n\r\nvoices();\r\n\r\nconst but1 = document.getElementById(\"but1\");\r\nconst but2 = document.getElementById(\"but2\");\r\nconst but5 = document.getElementById(\"but5\");\r\nconst resumeButton = document.getElementById(\"resumeButton\");\r\n\r\nbut1.addEventListener(\"click\", (event) => {\r\n  buttonsClickHandlerPlay.handleClick1(event);\r\n});\r\nbut2.addEventListener(\"click\", (event) => {\r\n  buttonsClickHandlerPlay.handleClick1(event);\r\n});\r\nbut5.addEventListener(\"click\", (event) => {\r\n  buttonsClickHandlerPauseResume.handleClick2(event);\r\n});\r\nresumeButton.addEventListener(\"click\", (event) => {\r\n  buttonsClickHandlerPauseResume.handleClick2(event);\r\n});\r\n\r\ncontrolCheckBox();\r\n"],"names":["myModule","inputElements","document","querySelectorAll","idFrom","activCheckBox","option1Checked","querySelector","checked","option2Checked","value","cookieId","cookie","split","find","row","startsWith","console","log","concat","setID","getIdFrom","currentButton2","buttonsClickHandlerPauseResume","handleClick2","event","target","id","className","speechSynthesis","pause","resume","countNwords","currentButton1","buttonsClickHandlerPlay","handleClick1","cancel","nWord","words","getCurrentButton1","controlCheckBox","forEach","checkbox","addEventListener","_this","box","disabled","window","firstCheckbox","countNWordVolue","optionCheckedNWord","alert","useCountNWord","countdown","seconds","initialSeconds","countdownElement","getElementById","circle","endDot","radius","r","baseVal","circumference","Math","PI","style","strokeDasharray","strokeDashoffset","formatTime","minutes","floor","remainingSeconds","String","padStart","setProgress","percent","offset","angle","x","cos","y","sin","setAttribute","timer","setInterval","textContent","progress","clearInterval","voiceList","synth","voices","innerHTML","availableVoices","getVoices","defaultVoice","getDefaultVoice","voice","selected","option","name","lang","insertAdjacentHTML","onvoiceschanged","voicePlay","getUtterance","text","rate","pitch","selectedVoiceName","length","selectedVoice","U","SpeechSynthesisUtterance","volume","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","processLines","isPaused","currentID","count_n_Word","n_Word","newID","_words","_callee2","sec","filePath","foundObjects","readNextString","response","stream","reader","decoder","result","_yield$reader$read","streamDone","jsonData","processedCount","_callee2$","_context2","Number","_ref","_callee","searchString","startIndex","startBracketIndex","endBracketIndex","dataChunk","foundObject","_callee$","_context","indexOf","lastIndexOf","substring","JSON","parse","setTimeout","fetch","ok","body","getReader","TextDecoder","read","decode","t0","_x","_processLines","parsedData","title","utterance","speak"],"sourceRoot":""}